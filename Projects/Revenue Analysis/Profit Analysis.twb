<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1211.1636                               -->
<workbook original-version='18.1' source-build='2019.4.1 (20194.19.1211.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='transactions+ (sales)' inline='true' name='federated.00v48pe0n3djwf125idi9055ibf8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0eiexik0ktmrlz17ml4zd0pkfhxb'>
            <connection class='mysql' dbname='sales' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[transactions].[product_code]' />
              <expression op='[products].[product_code]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[transactions].[market_code]' />
                <expression op='[markets].[markets_code]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[transactions].[order_date]' />
                  <expression op='[date].[date]' />
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[transactions].[customer_code]' />
                    <expression op='[customers].[customer_code]' />
                  </expression>
                </clause>
                <relation connection='mysql.0eiexik0ktmrlz17ml4zd0pkfhxb' name='transactions' table='[transactions]' type='table' />
                <relation connection='mysql.0eiexik0ktmrlz17ml4zd0pkfhxb' name='customers' table='[customers]' type='table' />
              </relation>
              <relation connection='mysql.0eiexik0ktmrlz17ml4zd0pkfhxb' name='date' table='[date]' type='table' />
            </relation>
            <relation connection='mysql.0eiexik0ktmrlz17ml4zd0pkfhxb' name='markets' table='[markets]' type='table' />
          </relation>
          <relation connection='mysql.0eiexik0ktmrlz17ml4zd0pkfhxb' name='products' table='[products]' type='table' />
        </relation>
        <cols>
          <map key='[cost_price]' value='[transactions].[cost_price]' />
          <map key='[currency]' value='[transactions].[currency]' />
          <map key='[custmer_name]' value='[customers].[custmer_name]' />
          <map key='[customer_code (customers)]' value='[customers].[customer_code]' />
          <map key='[customer_code]' value='[transactions].[customer_code]' />
          <map key='[customer_type]' value='[customers].[customer_type]' />
          <map key='[cy_date]' value='[date].[cy_date]' />
          <map key='[date]' value='[date].[date]' />
          <map key='[date_yy_mmm]' value='[date].[date_yy_mmm]' />
          <map key='[market_code]' value='[transactions].[market_code]' />
          <map key='[markets_code]' value='[markets].[markets_code]' />
          <map key='[markets_name]' value='[markets].[markets_name]' />
          <map key='[month_name]' value='[date].[month_name]' />
          <map key='[order_date]' value='[transactions].[order_date]' />
          <map key='[product_code (products)]' value='[products].[product_code]' />
          <map key='[product_code]' value='[transactions].[product_code]' />
          <map key='[product_type]' value='[products].[product_type]' />
          <map key='[profit_margin]' value='[transactions].[profit_margin]' />
          <map key='[profit_margin_percentage]' value='[transactions].[profit_margin_percentage]' />
          <map key='[sales_amount]' value='[transactions].[sales_amount]' />
          <map key='[sales_qty]' value='[transactions].[sales_qty]' />
          <map key='[year]' value='[date].[year]' />
          <map key='[zone]' value='[markets].[zone]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[market_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>market_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_date]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>order_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_qty</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sales_qty]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_qty</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sales_amount]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_amount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[currency]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>currency</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_margin_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_margin_percentage]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>profit_margin_percentage</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_margin]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>profit_margin</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost_price]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>cost_price</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code (customers)]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>custmer_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[custmer_name]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>custmer_name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_type]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_type</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cy_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[cy_date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>cy_date</remote-alias>
            <ordinal>17</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month_name]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>month_name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_yy_mmm</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_yy_mmm]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_yy_mmm</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_code]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_code</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_name]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_name</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zone]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>zone</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code (products)]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_type]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_type</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Normalized Amount' datatype='real' name='[Calculation_826973501527113728]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount] * 74 ELSE [sales_amount] END' />
      </column>
      <column caption='Blank' datatype='string' name='[Calculation_826973501536772098]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot; &quot;' />
      </column>
      <column caption='Profit Margin' datatype='real' name='[Calculation_953074291153960960]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([profit_margin])/sum([Calculation_826973501527113728])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
      <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
      <column caption='Customer Code (Customers)' datatype='string' name='[customer_code (customers)]' role='dimension' type='nominal' />
      <column caption='Customer Code' datatype='string' name='[customer_code]' role='dimension' type='nominal' />
      <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
      <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Yy Mmm' datatype='string' name='[date_yy_mmm]' role='dimension' type='nominal' />
      <column caption='Market Code' datatype='string' name='[market_code]' role='dimension' type='nominal' />
      <column caption='Markets Code' datatype='string' name='[markets_code]' role='dimension' type='nominal' />
      <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
      <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
      <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
      <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
      <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
      <column caption='Product Type' datatype='string' name='[product_type]' role='dimension' type='nominal' />
      <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
      <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column caption='Zone' datatype='string' name='[zone]' role='dimension' type='nominal' />
      <column-instance column='[customer_type]' derivation='None' name='[none:customer_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_826973501527113728]' derivation='Sum' name='[sum:Calculation_826973501527113728:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_953074291153960960]' derivation='User' name='[usr:Calculation_953074291153960960:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Blank,YEAR(Cy Date))' hidden='true' name='[Action (Blank,YEAR(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))' hidden='true' name='[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
          <groupfilter function='level-members' level='[qr:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Custmer Name)' hidden='true' name='[Action (Custmer Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[custmer_name]' />
        </groupfilter>
      </group>
      <group caption='Action (Customer Type)' hidden='true' name='[Action (Customer Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[customer_type]' />
        </groupfilter>
      </group>
      <group caption='Action (Markets Name)' hidden='true' name='[Action (Markets Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[markets_name]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.649378' measure-ordering='alphabetic' measure-percentage='0.350622' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:customer_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Brick &amp; Mortar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E-Commerce&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='orange_10_0' type='palette'>
            <map to='#9e3d22'>
              <bucket>&quot;[federated.00v48pe0n3djwf125idi9055ibf8].[usr:Calculation_953074291153960960:qk]&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='customer_code (customers)' />
        <field-sort-custom-order field='custmer_name' />
        <field-sort-custom-order field='customer_type' />
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='cy_date' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='month_name' />
        <field-sort-custom-order field='date_yy_mmm' />
        <field-sort-custom-order field='markets_code' />
        <field-sort-custom-order field='markets_name' />
        <field-sort-custom-order field='zone' />
        <field-sort-custom-order field='product_code (products)' />
        <field-sort-custom-order field='product_type' />
        <field-sort-custom-order field='product_code' />
        <field-sort-custom-order field='customer_code' />
        <field-sort-custom-order field='market_code' />
        <field-sort-custom-order field='order_date' />
        <field-sort-custom-order field='sales_qty' />
        <field-sort-custom-order field='sales_amount' />
        <field-sort-custom-order field='currency' />
        <field-sort-custom-order field='Calculation_826973501527113728' />
      </field-sort-info>
      <filter class='quantitative' column='[sales_amount]' filter-group='2' included-values='in-range'>
        <min>1.0</min>
        <max>1510944.0</max>
      </filter>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 10 (generated)' name='[Action10]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Profit Analysis' type='sheet' worksheet='Profit by Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 11 (generated)' name='[Action11]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Profit Analysis' type='sheet' worksheet='Pie Chart' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Revenue by Market' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Profit Analysis' type='sheet' worksheet='Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Profit Analysis' type='sheet' worksheet='Profit' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Profit Analysis' type='sheet' worksheet='Quantity' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Profit Analysis' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Profit Analysis' type='sheet' worksheet='Revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 9 (generated)' name='[Action9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Profit Analysis' type='sheet' worksheet='Revenue by Market' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Profit Analysis' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Customer Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.00v48pe0n3djwf125idi9055ibf8' />
          </datasources>
          <datasource-dependencies datasource='federated.00v48pe0n3djwf125idi9055ibf8'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_826973501527113728]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount] * 74 ELSE [sales_amount] END' />
            </column>
            <column caption='Profit Margin' datatype='real' name='[Calculation_953074291153960960]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([profit_margin])/sum([Calculation_826973501527113728])' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_826973501527113728]' derivation='Sum' name='[sum:Calculation_826973501527113728:qk]' pivot='key' type='quantitative' />
            <column-instance column='[profit_margin]' derivation='Sum' name='[sum:profit_margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_953074291153960960]' derivation='User' name='[usr:Calculation_953074291153960960:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00v48pe0n3djwf125idi9055ibf8].[usr:Calculation_953074291153960960:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00v48pe0n3djwf125idi9055ibf8].[sum:profit_margin:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Customer Type)]'>
            <groupfilter function='level-members' level='[customer_type]' user:ui-action-filter='[Action11]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]'>
            <groupfilter function='member' level='[markets_name]' member='&quot;Mumbai&quot;' user:ui-action-filter='[Action9]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[:Measure Names]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Customer Type)]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.00v48pe0n3djwf125idi9055ibf8].[usr:Calculation_953074291153960960:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00v48pe0n3djwf125idi9055ibf8].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00v48pe0n3djwf125idi9055ibf8].[none:custmer_name:nk]</rows>
        <cols>[federated.00v48pe0n3djwf125idi9055ibf8].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{3956BBEB-4E38-4485-BC7F-39CAD9FBAB44}' />
    </worksheet>
    <worksheet name='Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.00v48pe0n3djwf125idi9055ibf8' />
          </datasources>
          <datasource-dependencies datasource='federated.00v48pe0n3djwf125idi9055ibf8'>
            <column caption='Blank' datatype='string' name='[Calculation_826973501536772098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_826973501536772098]' derivation='None' name='[none:Calculation_826973501536772098:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Customer Type)]'>
            <groupfilter function='level-members' level='[customer_type]' user:ui-action-filter='[Action11]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]'>
            <groupfilter function='member' level='[markets_name]' member='&quot;Mumbai&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Customer Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='5' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.00v48pe0n3djwf125idi9055ibf8].[mn:cy_date:ok]' value='iLLL' />
            <format attr='color' field='[federated.00v48pe0n3djwf125idi9055ibf8].[mn:cy_date:ok]' value='#f28e2b' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00v48pe0n3djwf125idi9055ibf8].[none:Calculation_826973501536772098:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.00v48pe0n3djwf125idi9055ibf8].[mn:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{6B6296B5-259C-43E3-80D2-A8AD23850044}' />
    </worksheet>
    <worksheet name='Pie Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.00v48pe0n3djwf125idi9055ibf8' />
          </datasources>
          <datasource-dependencies datasource='federated.00v48pe0n3djwf125idi9055ibf8'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_826973501527113728]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount] * 74 ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[customer_type]' derivation='None' name='[none:customer_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[sales_amount]' derivation='Sum' name='[pcto:sum:sales_amount:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_826973501527113728]' derivation='Sum' name='[sum:Calculation_826973501527113728:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]'>
            <groupfilter function='member' level='[markets_name]' member='&quot;Mumbai&quot;' user:ui-action-filter='[Action9]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.00v48pe0n3djwf125idi9055ibf8].[pcto:sum:sales_amount:qk]' value='p0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.00v48pe0n3djwf125idi9055ibf8].[none:customer_type:nk]' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.00v48pe0n3djwf125idi9055ibf8].[none:customer_type:nk]' />
              <wedge-size column='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' />
              <size column='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' />
              <text column='[federated.00v48pe0n3djwf125idi9055ibf8].[none:customer_type:nk]' />
              <text column='[federated.00v48pe0n3djwf125idi9055ibf8].[pcto:sum:sales_amount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A884DC66-3307-49FE-9F89-D558DA42D05F}' />
    </worksheet>
    <worksheet name='Profit'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.00v48pe0n3djwf125idi9055ibf8' />
          </datasources>
          <datasource-dependencies datasource='federated.00v48pe0n3djwf125idi9055ibf8'>
            <column caption='Blank' datatype='string' name='[Calculation_826973501536772098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column-instance column='[profit_margin]' derivation='Sum' name='[sum:profit_margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Customer Type)]'>
            <groupfilter function='level-members' level='[customer_type]' user:ui-action-filter='[Action11]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]'>
            <groupfilter function='member' level='[markets_name]' member='&quot;Mumbai&quot;' user:ui-action-filter='[Action9]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Customer Type)]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:profit_margin:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#f28e2b' fontsize='16'>Profit</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#f28e2b' fontsize='16'>  &lt;[federated.00v48pe0n3djwf125idi9055ibf8].[sum:profit_margin:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F7EEFF7C-F5EB-4CBC-AAC1-95E6A169AF16}' />
    </worksheet>
    <worksheet name='Profit Trend'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.00v48pe0n3djwf125idi9055ibf8' />
          </datasources>
          <datasource-dependencies datasource='federated.00v48pe0n3djwf125idi9055ibf8'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_826973501527113728]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount] * 74 ELSE [sales_amount] END' />
            </column>
            <column caption='Profit Margin' datatype='real' name='[Calculation_953074291153960960]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([profit_margin])/sum([Calculation_826973501527113728])' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_826973501527113728]' derivation='Sum' name='[sum:Calculation_826973501527113728:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Quarter-Trunc' name='[tqr:cy_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_953074291153960960]' derivation='User' name='[usr:Calculation_953074291153960960:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Customer Type)]'>
            <groupfilter function='level-members' level='[customer_type]' user:ui-action-filter='[Action11]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]'>
            <groupfilter function='member' level='[markets_name]' member='&quot;Mumbai&quot;' user:ui-action-filter='[Action9]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Customer Type)]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.00v48pe0n3djwf125idi9055ibf8].[usr:Calculation_953074291153960960:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' value='72' />
            <format attr='width' field='[federated.00v48pe0n3djwf125idi9055ibf8].[usr:Calculation_953074291153960960:qk]' value='72' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.00v48pe0n3djwf125idi9055ibf8].[tqr:cy_date:qk]' value='100' />
            <format attr='text-format' field='[federated.00v48pe0n3djwf125idi9055ibf8].[usr:Calculation_953074291153960960:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <text column='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.00v48pe0n3djwf125idi9055ibf8].[usr:Calculation_953074291153960960:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.00v48pe0n3djwf125idi9055ibf8].[:Measure Names]' />
              <text column='[federated.00v48pe0n3djwf125idi9055ibf8].[usr:Calculation_953074291153960960:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk] + [federated.00v48pe0n3djwf125idi9055ibf8].[usr:Calculation_953074291153960960:qk])</rows>
        <cols>[federated.00v48pe0n3djwf125idi9055ibf8].[tqr:cy_date:qk]</cols>
      </table>
      <simple-id uuid='{B5982B8A-A8E9-44C4-A63A-3093E735E19C}' />
    </worksheet>
    <worksheet name='Profit by Markets'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.00v48pe0n3djwf125idi9055ibf8' />
          </datasources>
          <datasource-dependencies datasource='federated.00v48pe0n3djwf125idi9055ibf8'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_826973501527113728]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount] * 74 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_826973501536772098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Profit Margin' datatype='real' name='[Calculation_953074291153960960]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([profit_margin])/sum([Calculation_826973501527113728])' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[profit_margin]' derivation='Sum' name='[sum:profit_margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_953074291153960960]' derivation='User' name='[usr:Calculation_953074291153960960:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Customer Type)]'>
            <groupfilter function='level-members' level='[customer_type]' user:ui-action-filter='[Action11]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]'>
            <groupfilter function='member' level='[markets_name]' member='&quot;Mumbai&quot;' user:ui-action-filter='[Action9]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.00v48pe0n3djwf125idi9055ibf8].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:profit_margin:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Customer Type)]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.00v48pe0n3djwf125idi9055ibf8].[usr:Calculation_953074291153960960:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00v48pe0n3djwf125idi9055ibf8].[usr:Calculation_953074291153960960:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00v48pe0n3djwf125idi9055ibf8].[none:markets_name:nk]</rows>
        <cols>[federated.00v48pe0n3djwf125idi9055ibf8].[usr:Calculation_953074291153960960:qk]</cols>
      </table>
      <simple-id uuid='{64093142-5DEE-44FD-8CC0-2171F5881018}' />
    </worksheet>
    <worksheet name='Quantity'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.00v48pe0n3djwf125idi9055ibf8' />
          </datasources>
          <datasource-dependencies datasource='federated.00v48pe0n3djwf125idi9055ibf8'>
            <column caption='Blank' datatype='string' name='[Calculation_826973501536772098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Customer Type)]'>
            <groupfilter function='level-members' level='[customer_type]' user:ui-action-filter='[Action11]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]'>
            <groupfilter function='member' level='[markets_name]' member='&quot;Mumbai&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Customer Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#f28e2b' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='18'>Æ  </run>
                <run bold='true' fontsize='18'>  Sales Quantity </run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='18'>     &lt;[federated.00v48pe0n3djwf125idi9055ibf8].[sum:sales_qty:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{52E4B0F3-8210-4771-8EA9-82D63E0B484E}' />
    </worksheet>
    <worksheet name='Revenue'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.00v48pe0n3djwf125idi9055ibf8' />
          </datasources>
          <datasource-dependencies datasource='federated.00v48pe0n3djwf125idi9055ibf8'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_826973501527113728]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount] * 74 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_826973501536772098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_826973501527113728]' derivation='Sum' name='[sum:Calculation_826973501527113728:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Customer Type)]'>
            <groupfilter function='level-members' level='[customer_type]' user:ui-action-filter='[Action11]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]'>
            <groupfilter function='member' level='[markets_name]' member='&quot;Mumbai&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Customer Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#f28e2b' fontsize='18'>Total Revenue</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#f28e2b' fontsize='18'>&lt;[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{05231B42-736C-4173-960A-B315A2A704E3}' />
    </worksheet>
    <worksheet name='Revenue by Market'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.00v48pe0n3djwf125idi9055ibf8' />
          </datasources>
          <datasource-dependencies datasource='federated.00v48pe0n3djwf125idi9055ibf8'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_826973501527113728]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount] * 74 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_826973501536772098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_826973501527113728]' derivation='Sum' name='[sum:Calculation_826973501527113728:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Customer Type)]'>
            <groupfilter function='level-members' level='[customer_type]' user:ui-action-filter='[Action11]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.00v48pe0n3djwf125idi9055ibf8].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Customer Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' value='c#,##0,,.00M;(#,##0,,.00M)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.00v48pe0n3djwf125idi9055ibf8].[none:markets_name:nk]' value='48' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='878' />
                <format attr='maxwidth' value='878' />
                <format attr='minheight' value='280' />
                <format attr='maxheight' value='280' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00v48pe0n3djwf125idi9055ibf8].[none:markets_name:nk]</rows>
        <cols>[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]</cols>
      </table>
      <simple-id uuid='{46A3B98A-D309-4F56-8C3A-D165589AF1C3}' />
    </worksheet>
    <worksheet name='Revenue by Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.00v48pe0n3djwf125idi9055ibf8' />
          </datasources>
          <datasource-dependencies datasource='federated.00v48pe0n3djwf125idi9055ibf8'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_826973501527113728]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount] * 74 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_826973501536772098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_826973501527113728]' derivation='Sum' name='[sum:Calculation_826973501527113728:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' scope='rows' value='' />
            <format attr='height' field='[federated.00v48pe0n3djwf125idi9055ibf8].[mn:cy_date:ok]' value='39' />
            <format attr='width' field='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' value='32' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' value='c#,##0,,.00M;(#,##0,,.00M)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.00v48pe0n3djwf125idi9055ibf8].[mn:cy_date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' />
              <text column='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]</rows>
        <cols>([federated.00v48pe0n3djwf125idi9055ibf8].[yr:cy_date:ok] / [federated.00v48pe0n3djwf125idi9055ibf8].[mn:cy_date:ok])</cols>
      </table>
      <simple-id uuid='{ACDC5914-0F28-4B51-A365-94C537DF1F45}' />
    </worksheet>
    <worksheet name='Sales Quantity by Market'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.00v48pe0n3djwf125idi9055ibf8' />
          </datasources>
          <datasource-dependencies datasource='federated.00v48pe0n3djwf125idi9055ibf8'>
            <column caption='Blank' datatype='string' name='[Calculation_826973501536772098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.00v48pe0n3djwf125idi9055ibf8].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:sales_qty:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:sales_qty:qk]' value='c#,##0,.00K;(#,##0,.00K)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:sales_qty:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00v48pe0n3djwf125idi9055ibf8].[none:markets_name:nk]</rows>
        <cols>[federated.00v48pe0n3djwf125idi9055ibf8].[sum:sales_qty:qk]</cols>
      </table>
      <simple-id uuid='{1CAA7C34-5A33-41A6-8BDE-FFB02DC75A0A}' />
    </worksheet>
    <worksheet name='Top 5 Customers'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.00v48pe0n3djwf125idi9055ibf8' />
          </datasources>
          <datasource-dependencies datasource='federated.00v48pe0n3djwf125idi9055ibf8'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_826973501527113728]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount] * 74 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_826973501536772098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_826973501527113728]' derivation='Sum' name='[sum:Calculation_826973501527113728:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[none:custmer_name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_826973501527113728])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:custmer_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.00v48pe0n3djwf125idi9055ibf8].[none:custmer_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[none:custmer_name:nk]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' value='c#,##0,,.00M;(#,##0,,.00M)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.00v48pe0n3djwf125idi9055ibf8].[none:custmer_name:nk]' value='80' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00v48pe0n3djwf125idi9055ibf8].[none:custmer_name:nk]</rows>
        <cols>[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]</cols>
      </table>
      <simple-id uuid='{589880A5-31B1-46BB-A405-220980B5EE54}' />
    </worksheet>
    <worksheet name='Top 5 Products'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.00v48pe0n3djwf125idi9055ibf8' />
          </datasources>
          <datasource-dependencies datasource='federated.00v48pe0n3djwf125idi9055ibf8'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_826973501527113728]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount] * 74 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_826973501536772098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[product_code (products)]' derivation='None' name='[none:product_code (products):nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_826973501527113728]' derivation='Sum' name='[sum:Calculation_826973501527113728:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[none:product_code (products):nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_826973501527113728])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:product_code (products):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.00v48pe0n3djwf125idi9055ibf8].[none:product_code (products):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[none:product_code (products):nk]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.00v48pe0n3djwf125idi9055ibf8].[none:product_code (products):nk]' value='56' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00v48pe0n3djwf125idi9055ibf8].[none:product_code (products):nk]</rows>
        <cols>[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]</cols>
      </table>
      <simple-id uuid='{3CC32977-D371-4A6A-BFB3-B3C8BA17E41D}' />
    </worksheet>
    <worksheet name='Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.00v48pe0n3djwf125idi9055ibf8' />
          </datasources>
          <datasource-dependencies datasource='federated.00v48pe0n3djwf125idi9055ibf8'>
            <column caption='Blank' datatype='string' name='[Calculation_826973501536772098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_826973501536772098]' derivation='None' name='[none:Calculation_826973501536772098:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Customer Type)]'>
            <groupfilter function='level-members' level='[customer_type]' user:ui-action-filter='[Action11]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]'>
            <groupfilter function='member' level='[markets_name]' member='&quot;Mumbai&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Customer Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='5' />
            <format attr='color' value='#f28e2b' />
            <format attr='width' field='[federated.00v48pe0n3djwf125idi9055ibf8].[yr:cy_date:ok]' value='77' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.00v48pe0n3djwf125idi9055ibf8].[yr:cy_date:ok]' value='36' />
            <format attr='height' field='[federated.00v48pe0n3djwf125idi9055ibf8].[qr:cy_date:ok]' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.00v48pe0n3djwf125idi9055ibf8].[yr:cy_date:ok]' value='12' />
            <format attr='color' field='[federated.00v48pe0n3djwf125idi9055ibf8].[qr:cy_date:ok]' value='#f28e2b' />
            <format attr='color' field='[federated.00v48pe0n3djwf125idi9055ibf8].[yr:cy_date:ok]' value='#f28e2b' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00v48pe0n3djwf125idi9055ibf8].[none:Calculation_826973501536772098:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.00v48pe0n3djwf125idi9055ibf8].[yr:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{099ED881-90AA-47CF-BA79-5EC0FC730061}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='900' maxwidth='1100' minheight='900' minwidth='1100' sizing-mode='fixed' />
      <zones>
        <zone h='14667' id='3' name='Year' show-title='false' w='69455' x='36091' y='10000' />
        <zone h='6375' id='4' name='Month' show-title='false' w='67818' x='21818' y='17875' />
        <zone h='53500' id='5' name='Revenue by Market' w='26867' x='1133' y='35000' />
        <zone h='11625' id='6' name='Revenue' show-title='false' w='33273' x='1364' y='22750' />
        <zone h='52000' id='7' name='Sales Quantity by Market' w='26091' x='28818' y='35778' />
        <zone h='18400' id='8' name='Quantity' show-title='false' w='33273' x='29364' y='23067' />
        <zone h='36667' id='9' name='Revenue by Year' w='43636' x='56000' y='22000' />
        <zone h='24556' id='10' name='Top 5 Products' w='21091' x='55091' y='60889' />
        <zone h='24667' id='11' name='Top 5 Customers' w='22545' x='77455' y='60000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='18' param='vert' type='layout-flow' w='98546' x='727' y='889'>
                <zone fixed-size='132' h='14667' id='3' is-fixed='true' name='Year' show-title='false' w='69455' x='36091' y='10000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='57' h='6375' id='4' is-fixed='true' name='Month' show-title='false' w='67818' x='21818' y='17875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36667' id='9' is-fixed='true' name='Revenue by Year' w='43636' x='56000' y='22000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='104' h='11625' id='6' is-fixed='true' name='Revenue' show-title='false' w='33273' x='1364' y='22750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='165' h='18400' id='8' is-fixed='true' name='Quantity' show-title='false' w='33273' x='29364' y='23067'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53500' id='5' is-fixed='true' name='Revenue by Market' w='26867' x='1133' y='35000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52000' id='7' is-fixed='true' name='Sales Quantity by Market' w='26091' x='28818' y='35778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='222' h='24667' id='11' is-fixed='true' name='Top 5 Customers' w='22545' x='77455' y='60000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='221' h='24556' id='10' is-fixed='true' name='Top 5 Products' w='21091' x='55091' y='60889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1AC0D431-03FC-4849-A8D3-129C4C7E927F}' />
    </dashboard>
    <dashboard name='Dashboard Profit Analysis'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='5125' id='3' name='Year' show-title='false' w='33300' x='29600' y='4125' />
        <zone h='6875' id='4' name='Month' show-title='false' w='72200' x='12000' y='9000' />
        <zone h='9375' id='5' name='Revenue' show-title='false' w='26900' x='800' y='1250' />
        <zone h='24625' id='6' name='Quantity' show-title='false' w='35000' x='60800' y='500' />
        <zone h='52625' id='7' name='Revenue by Market' w='28700' x='200' y='12875' />
        <zone h='10625' id='8' name='Profit' w='21100' x='83700' y='375' />
        <zone h='52250' id='9' name='Profit by Markets' w='34500' x='30000' y='13250' />
        <zone h='53750' id='10' name='Profit Trend' w='35200' x='64700' y='12500' />
        <zone h='4750' id='11' name='Profit Trend' pane-specification-id='2' param='[federated.00v48pe0n3djwf125idi9055ibf8].[:Measure Names]' type='color' w='14000' x='54100' y='28875' />
        <zone h='32250' id='12' name='Customer Table' show-title='false' w='41800' x='400' y='67375' />
        <zone h='34250' id='13' name='Pie Chart' w='55500' x='44000' y='66125' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2000' minheight='2000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='18' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='85' h='10625' id='8' is-fixed='true' name='Profit' w='21100' x='83700' y='375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='197' h='24625' id='6' is-fixed='true' name='Quantity' show-title='false' w='35000' x='60800' y='500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='75' h='9375' id='5' is-fixed='true' name='Revenue' show-title='false' w='26900' x='800' y='1250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='41' h='5125' id='3' is-fixed='true' name='Year' show-title='false' w='33300' x='29600' y='4125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='55' h='6875' id='4' is-fixed='true' name='Month' show-title='false' w='72200' x='12000' y='9000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53750' id='10' is-fixed='true' name='Profit Trend' w='35200' x='64700' y='12500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4750' id='11' name='Profit Trend' pane-specification-id='2' param='[federated.00v48pe0n3djwf125idi9055ibf8].[:Measure Names]' type='color' w='14000' x='54100' y='28875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52625' id='7' is-fixed='true' name='Revenue by Market' w='28700' x='200' y='12875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52250' id='9' is-fixed='true' name='Profit by Markets' w='34500' x='30000' y='13250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='274' h='34250' id='13' is-fixed='true' name='Pie Chart' w='55500' x='44000' y='66125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='258' h='32250' id='12' is-fixed='true' name='Customer Table' show-title='false' w='41800' x='400' y='67375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7526E33D-0AB9-4BA8-A772-9DDAC8BA8F9D}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00v48pe0n3djwf125idi9055ibf8].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A95F7CAB-0A07-443F-8162-3A63B47AEDFC}' />
    </window>
    <window class='worksheet' name='Quantity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6C5646A4-D664-494C-AFD7-4F31CDA2C205}' />
    </window>
    <window class='worksheet' name='Revenue by Market'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00v48pe0n3djwf125idi9055ibf8].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3CB0A4FC-99BA-41F6-A084-E79E718F453E}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard Profit Analysis'>
      <viewpoints>
        <viewpoint name='Customer Table' />
        <viewpoint name='Month' />
        <viewpoint name='Pie Chart'>
          <zoom type='entire-view' />
          <highlight field='[federated.00v48pe0n3djwf125idi9055ibf8].[none:customer_type:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Profit' />
        <viewpoint name='Profit Trend'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit by Markets' />
        <viewpoint name='Quantity' />
        <viewpoint name='Revenue' />
        <viewpoint name='Revenue by Market'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.00v48pe0n3djwf125idi9055ibf8].[none:markets_name:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.00v48pe0n3djwf125idi9055ibf8].[none:markets_name:nk]</field>
                    <field>[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Mumbai&quot;</value>
                  <value>81708974.0</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Year' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3A60A833-EB08-442A-BDD6-EB1DEA5313E4}' />
    </window>
    <window class='worksheet' name='Sales Quantity by Market'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00v48pe0n3djwf125idi9055ibf8].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B887CBC4-B4DC-44BA-AD8A-8FF3C899A859}' />
    </window>
    <window class='worksheet' name='Top 5 Customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00v48pe0n3djwf125idi9055ibf8].[none:custmer_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{34D6299D-A25E-4EA7-9EF3-30C85C068DF3}' />
    </window>
    <window class='worksheet' name='Top 5 Products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00v48pe0n3djwf125idi9055ibf8].[none:product_code (products):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{16A4FFAC-9C2D-4B4C-9576-9B45708B7526}' />
    </window>
    <window class='worksheet' name='Revenue by Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00v48pe0n3djwf125idi9055ibf8].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{090C7A79-A21E-4AED-BD9C-1D3C88CEF65E}' />
    </window>
    <window class='worksheet' name='Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00v48pe0n3djwf125idi9055ibf8].[none:Calculation_826973501536772098:nk]</field>
            <field>[federated.00v48pe0n3djwf125idi9055ibf8].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A6706602-B338-4691-9FB0-79508DB47078}' />
    </window>
    <window class='worksheet' name='Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00v48pe0n3djwf125idi9055ibf8].[none:Calculation_826973501536772098:nk]</field>
            <field>[federated.00v48pe0n3djwf125idi9055ibf8].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6FE25709-8B10-41A7-8E2B-5E09AA082359}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Month' />
        <viewpoint name='Quantity' />
        <viewpoint name='Revenue' />
        <viewpoint name='Revenue by Market' />
        <viewpoint name='Revenue by Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales Quantity by Market' />
        <viewpoint name='Top 5 Customers' />
        <viewpoint name='Top 5 Products' />
        <viewpoint name='Year' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{13D89BBD-2F04-4328-9E5A-3190F0DF4BB1}' />
    </window>
    <window class='worksheet' name='Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{933FD6F7-01DC-40FF-A993-1445123C68F3}' />
    </window>
    <window class='worksheet' name='Profit by Markets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00v48pe0n3djwf125idi9055ibf8].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7B2E01A4-A822-4DCE-BA44-E5A132F28C93}' />
    </window>
    <window class='worksheet' name='Profit Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.00v48pe0n3djwf125idi9055ibf8].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00v48pe0n3djwf125idi9055ibf8].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{18BBCC07-F90E-45E9-A4E9-E5CE8AA8C568}' />
    </window>
    <window class='worksheet' name='Customer Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00v48pe0n3djwf125idi9055ibf8].[:Measure Names]</field>
            <field>[federated.00v48pe0n3djwf125idi9055ibf8].[none:custmer_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A697A7B2-2475-404A-9718-00633AECD89D}' />
    </window>
    <window class='worksheet' name='Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00v48pe0n3djwf125idi9055ibf8].[none:customer_type:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.00v48pe0n3djwf125idi9055ibf8].[none:customer_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{18AE050B-BF9E-478F-965A-3ADD32847739}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Customer Table' width='192'>
      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
      NU27egdmsDJ0HKOM/AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard Profit Analysis' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='29' name='Month' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAAdCAYAAAD8fGP2AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEIklEQVR4nO3cTWgcZRzH8e/MTvZtmhxKgkZjstGUWBpiY9qmmmJzMBpb7QqiFGp68KWC
      koKFCLWgIEroqQdR8FKkEURpySHQShtrqrRN0vjSdnswhmY3lKaHrkU3+5Z9dsfDrs02EWvc
      yc6GeT6wsDPPszv/Z9jfzPPMYRXDMAwkyaZUqwuQJCvJAEi2JgMg2ZoMgGRrMgCSrckASLYm
      AyDZmgyAZGsyAJKtyQBItiYDINmaDIBkazIAkq0VFIDM6ItEjg+bVEqpCpLsbyJyKP91APEf
      PhOfLFKJppofb/xK9I4W48re7Pj7D5OxqDqzaVYXsFJozwXwNFhdRfFojX5E6AKs68jtEaRD
      V3G2+pkLWVmZueQUSPpnDZ1o0+fz7nQ/I2bacdxnYU3LwLw7QPQk8aMfIX4PAx6Umtfx+Pfg
      cGanStFrm3E6hkmFpjDURpz+I7hqddMOb40/EN+9QeJSACPjQanvxbvjJdTcZcWY+IDoyQEy
      SQ2l8X28Xc/ebit56ka0e/pIz+xHqwZmzpGufgw3p/I63SR1Yg/JyQkMAXgex+k/hKtah8kD
      RM4/hP7MKhIDfRjNA+htPmvG8i9MnALdj3PbIJ6qCsiEmRvYSuLiNvSNNdnmlBet8ytcFQ7S
      p3cQC1zAVdth3uGXmRhsIvL3RuU+9O5X4Jd9JNM96D3tKIRJffMC8XPN6FvcuX4v4+16DyU+
      RLy/l0RgM97mSquGsEQ6Wn0NsekgrmofmekR1PrX4I4AgNp0EL1zDYomMC7uZfb0Mcp27c5O
      LZKnSHzbjHPnCFq5y4pB3JV5AXAIxNldxENTGLkVklqTt1SsWIujwguAoldAwrQjF8XiNUCU
      1NQomeAos5fzdjfeAHwAKKsfRFEB/Ulcj/iIXgtAc0exSi6YUtsOQ2MYbasQoSq053WYzu9R
      Btc/ITZ4hkwyld1VuWG+ee4Byvz70dzFrHppCgpAZvY6qNmvEGffJKW9i/et7agaiONNJE0p
      sbQ5tg7hffTeBXuDi/oZqdjtc7VirG5D+/MzRMRLmi24nQvapz8l/qMTV/cIZeWu3LQnr738
      YRwl/OOH/7EINqLh7JtbR0n9GkOra8lup2LgrUbVBEb4DCJsZpmlSMdR10p67CCpW7moJ35D
      hILzXUQSEBg3jpAMzKI1tFhRaAHW4ai/hPjhezJ1m1AWNosEhrMS1eOCuauI4IQVRRZkyZck
      Y6KX2eEx0GrRNn2Oe212IatteBv161eJXPagNvTg8Jpea8lR1/fhvvkOyS9aSQjAsx7tiQ+z
      J9XTgvHTU0ROhLPnqv0wnoaVt+jX1jxN4tgwZTt9ixt9u3GVdxP7+EuUqi6cNVVFr69Qivxb
      FMnOVspDOUlaFjIAkq3JAEi2JgMg2dpdnwKNj48Xow5JssRffkxBH7a3onYAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='Pie Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='62' name='Profit' width='144'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit Trend' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit by Markets' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dWXsb153n8W8t2HcQBPedEimKEiVLpuN4ixO3k+kkvcy8Ib+IuZirvpin
      L+Z5ZiZx0k53EjtxHFmSJVISKYqkuK8ACIIg9rW2uaC8tDKySFsUKeF87kQUcOpA9cOpqv+p
      KsmyLAtBaFDySa+AIJwkEQChoYkACA1NBEBoaCIAQkMTARAamgiA0NBEAISGJgIgNDQRAKGh
      iQAIDU0EQGhoIgBCQ2uIAFiWxWEnvR5l2e/jebbzPNp4UfvSEAEwDAPTNA+1rGVZaJp2zGsE
      9Xr92Nt4Xu2Ypomu68feznH0pSECIAhPIgIgNDT1ubSS2+T//mkSWVZp7R3h6tggNukbr+e3
      uJVQONOsU62GaG/3AVDLp6jYwgRdCqXkBp9NLfPWj3+MvbTK/G6Q0U648fkX7FcsRl59G3Pt
      GtPJGi5ngPG33qbVZ3su3RNeXM8nAEad7kvvcqXbxdL926zutNEfNIgn9/E2tRI26hQqKrpe
      Yz+5g6ZlibS1Q7VETQ4dfISu4PPUWVrd4VxTlVJFZ21+mfaxN3kz4qKmy8RjUd7/56vYMktM
      L8RpudqD9JRVExrb8wnAI7LqpKWrlbXtXe6vLLFXMqnJW7x3sfVgAa3K9naaUBV2Cgq9+hbp
      rlZavCog0dzZT357k0LAA0C6bjIW8iErMi4FDK1COrWLtJvCGTj3PLsmvKCe6zGAZZmUs1kk
      p53teAKX20MwEESWHp3esrkZvnCZy5cv4jSrf/N+ye7jTK+H+YUEAB5ZplDTsCwTw7TQannm
      Jq9ze13i4kBI/PoLT/XcRoCHtz9ha0rBHe7hnTejGPEgK7sp3E1OLMvxN8tLEvD/2YSDrQOY
      k7epBS8yNNTF7z/+CF2SOXvlXVzeFt760SvUVue4N7vO1dFeZEnEQHgyqRFui6LrOpIkoSjK
      U5f98py23W4/1nWq1WrY7XakYw5orVbD4fjbH5hn6cs6i812vCcdjqMv4jSo0NBEAISGJgIg
      NDQRAKGhnVgALMuimMuhPzoG1+sVCqW/PfX5hDdTq9d5+Q/fheN2cgEwTf7yv/+Fh+k6FhYb
      03/kf/1h+nBvNurcn5t/4st6aYeFtTQiH8LTPNdK8OM6zw+RXlrHDHewl7XR2uyhWk6Tzqq0
      tznYWEsT8BgsLi6SM1y0+mQSWYvXf3iFei7BHz/apHnoCmP9YeYmv2AjrXHhtdfpcMs4nQ5R
      CBOe6mSPAewt+Gz77K9vY+vqwSVDrbJPIpkHq87meoLsbpJA3yUGogqGq5srg062kmWwBXjn
      pz9DTy6QLlZQFDuqkeP29CJ6ZY/NZOlEuya8GE78ILjN6+JOLEVH0P/V30zTpF7KUNIA1U04
      4MYZCNES9GN3OlAssDldOGwyiqxQ20uQVsNcuXQem2ScXGeEF86JBUCSJPyBANGeNnxKAH/Q
      T3PYh9vdTGV3ij/fXqMpGsTt9WFXFZxOL06niurw4XXbcWl7fPjhv6EHemjp7EDdX+POwziR
      SAjF7qMpcLzVT+HlIKZCPEZMhTg6MRVCEF5QIgBCQxMBEBqaCIDQ0J55ACr5OHPLB1dsUc+S
      zNS+0+dYlkVqd5f/fDcfg/3kHk+7a49pVEmlcqISLDzVMw6ASWp1iaXVTUomUE+xmax8t4+y
      LGKbm49txCaJzdhTA2AYFWKxve/WrtBQnulUCEvLE6+GGO8ps75b47wXNmZuEpstEj33JkNN
      OSZvLFLS6/ibI+STaV75L/+ALTHNvYUY/razXB3tYObGNWI5DXuwk8H0FtdvTlJVgrz+xqvU
      Cwn+9Lt1TDnET95/naXPP2E9U6Nr5AdcaJP54votUqUKoa4rz7JrwkvqmQagkNolU84RdNuI
      r6xwfsxGtP8ib4zZuX0nhx6CvtHXaffGmct28u6ZNe7k8iSuT1P1ByitLxCLgL3jVf7p3Sam
      7txD1zVAJp/YZn13ELenmXfeuYw+/xeWUjq6CZZR4uHsKh2KjabRH/PD5ioP5rPPsmvCS+oZ
      BsAinYphUzyU6xaFXArdasfl8aCoJqosg6zgsNtRbDbcTieKoiBZdkJtHbSPXsQtm8iUiMeT
      7O5UKVRhJ5mi6+wYLYE1dEwso04mlSS1U6O5ZZcluZ3xq51MzZQwZYVcKkHSqFHWnM+ua8JL
      65mOAMHWYd4cbcOpmPTGk2gON72tLsCit1fF67XweFzY1DbaHXZQuum1PLjGR5lbWKcUbmN4
      oI/u3Czr8Rx9gz20+iTuzy7jbO6hKxrGctRZWl0jePYq3ZEmzKYUO3knoxcGiLZ7KeZnSGTc
      9PU2P8uuCS8pMRXiMWIqxNGJqRCC8IISARAamgiA0NBEAISGdqLXBH9TYmmCG/c2kR0uhl95
      jWHXHkvSEGebjv5Z9fwGiyk/owOhZ7+iwkvl1ARAVxz88Ce/IKykubWUYKi9QqpaICLpePwB
      bOgUCkVQnfi9LmqVEpVKDdXlxeuyUS7kqeoWHp8ftBKZgqgDCE93egJQ3OPazYd4An6GxsaB
      ZZbuT1B15nD2v0lbZY6FXR3ZrDP0yhusTX2KYg+wVzZ47+2rrMxMk8wWcHedZ7zjpHsjvChO
      TQBUb4R3f/YGYTXD7cU4Z9slRl/7MVeDm0ysV9jfV3nj796B/SUW11J4o71cHRtjdeYuuWya
      TKmCqVfZiCUZ7/A/vUFB4BQFwChnuDPzKS6HgRzqf+xVB5GIwWf//ntkTEbH32JlcppPUjtU
      8fJ2awTdtHA43dhlcVwvHN6pqQTrWpVKpQ6SjNPlRpUMdGzYZAPNkFAkk0qlAoodtw1u3bvP
      +aFh7C43dlWiVimjWzKqzYZDldAMGbvtIAyiEiwqwU9yagJwJJZJpVbH6XBymO1HBEAE4ElO
      zS7QkUgyLqc4yyN8f2KHWWhoIgBCQzsFAbAwdB3LssCyMEzz6W8RhGfkFASgzEf/+q883MlD
      OcWnE7MnvUJCAzkVB8HdA4MklhfoGesFQK9mmbozTVkJcfXqKGotw8z0LFW7n9HhYQqpDba2
      Eng7hjnf7iBWstEVUthKlmiJ2MmlCqwk87x2efjYz7IIL7ZTMAKA5AzR32JjfTt98AdLo1at
      U9i8y9RWmcX70/i6zhJmn3i2zPrWHoOjF8gvz5Le32YhngO9xMJqnFolyc3rc3T2dJ1sp4QX
      wqkIAEi0dfeS216lqFvkt1chOsjZ7gjFUgXTshNtieC2q1iA3RsgEgoRcKpoHDxuqV6rUq1r
      IKv0j1yks8krfv2FpzoFAVBwe1woziAD/U1ImoQzFCG9NEWiqOB32QiHbPzlo4+4u5RAkiSK
      8UU+/PA37LlbaI50ocbv8vHn0yh2J4rixOsVzwYQDueFqARvzFzn7lISV7CN138wxsZ6nIsj
      g4d+v6gEi0rwk7wQAfi+RABEAJ7kFOwCCcLJEQEQGpoIgNDQTm8ALItsZh/TglI2Tb5cf+Ki
      RqVErvzdnkMgNLbTGwAs1jdW0Wp5Hswuon/LqmrZXbb281/9Wy/tsLCWFg/IEJ7qVEyFeBKt
      nGf6zjThgTFCDoOHd27ycGuftqFXeHUwzK3PPiVZdnNltI3NlXlWJup0XvgBF6I1NNOBKIMJ
      T3OqA2BUS2QqNqKqQiWdICU18YufX2Hyz7fZZB35zDv8ssNFZXedUMc5rnS5ubOWx9Q0cVsU
      4VBO8S4QOMNtvPujcWILMxR10KpVSuUyFQs8LheVQoFKuYJuSfj8XuyKgnqIc/2C8KVTHACJ
      ttYObK4wY2e70J1hzrfauX1rmu5Lr9Dce4WO+jLXbz9Ac/iJ+j1gc9MRDaG6o/S2eU+6A8IL
      QFSCHyMqwUcnKsGC8IISARAamgiA0NBEAISGdirrAPXqDp/85hpVu52zl99gpCeC/I1jRaNe
      B7sdccJT+L5O5QhgUqfz3Dv80y/fZ3/tPsWqjqZpaLqOaZls3rnDTr2OYVoYxsFrumFiWRa6
      rqFpGubLf3JLeAZO5QjwFcsCJErpTW7dn6Us2Tg/MszM9DS1vT3GX3+DxU9+j+Zxo8tR3nv3
      PDM3r7FXNuk+90PGBiNiOoTwrU5nAAydBzf/yMpaiIuvv41SXqde1ymUsqRLl7h65Qr2V1+l
      hSLZvjEujo+wMjFBWStRKunUq2XWNmKMDUZOuifCKXc6A6CojL7+PhcvRgHYeFjBHWzG6bUj
      Y6HaS9z57AteuTyEJMsgSSBJaFoF2e6nIxIgUxO7QMLTncpKsGnWqddlnM6DfBr1MnvpHIrT
      hcflwS5r7KYy+CMtyIaO0+2kXi6jOGzk0nsYihO304nH40JCVIJFJfjJTmUAnjURABGAJzmV
      Z4EE4XkRARAamgiA0NBO9iyQpTE/cZPtko3Lr45Sz2u0t4dPdJWExnJyI4BlsXL3OpXwWV67
      NIhMjVhs75l8tLgoXjisExsBLMtkt6Zypa8FuyIBeaYSS/zut7NU7W38w3sjTH52g2RJZ+jy
      m3iz00yuFTG1Old/9FMSDz4jnatSs0f46TuXmLt1g+39Kt0XxhmNFMlXQqIKLDzViR8DfPMk
      rLupm7/7+59zNmgjtz3DnfUcRq3A5vYuhmLn0hvv85PXByjna1jOJv7u5//IUIcLrVJDN8HS
      Cswub2KZGtW6cXKdEl4YJzYCSJJMd1Dh9vQ8HQEbnuYAit2BXZVRFRnVG6Kr287YmWZkuxep
      kEOx25B1BQlQHQ5ssoyiKOiFLDV3M2OjEaZ3xIYvHN7JFsIsnc3FedI1lYEzvegVnXDYQ34/
      hzsUZHd1lkROp613kKBaR3KFUY0cFcOFXi8TCgYp5DO43G7iq0sUDDuBSDPtAZn9ioPm4MGt
      UUQhTBTCnkRUgh8jAnB0L3IATvwYQBBOkgiA0NBEAISGJgIgNLRjC8Du3ByPnvrLwoMJ8k+4
      fX91Z421TOWQn6qzNrdE9WlLaXmWlrZFJVh4qmOrA9RLpa/u2lAu5KjXalQlGadNoVSp4Xba
      SKdS5LYTlLua0Wtl0vtZbJ4gQa+dWrVGsVghEPCQ2c9gqU4iTV5KuQzJnThuh59I0E1+P0Wx
      ZhIIR/DYZQrZNNlChkzhdF7sJpwux7aVmEaaT3/1KzxAoW7S1r3L1HqNVwabeLAQo8dVYnpH
      x1Xcw99hsDI9wVqmjmXYuPzmBaY/+SuO9iHGBvzMz86Tr5iMjo+jVXNsbVgUE7tc/NnP2FuY
      JZ4vooZGeLXX5NbUNh6vhGHvPq6uCS+RYwuArDTx3n/9GW3AvZuf4Ai307Rzm8XNIr5QF5vJ
      Dd57Z5zqxhwbSonVpV3k1ggujxPJkAh2jfDaq+dILE+hWwqUC6TyRbzeZoaujsHKNeaSOXI5
      DZtdJh1LUgyr9L/6I3o8WWbnM8fVNeEl8hwPghVau6IszCXp6Q7R46vxf379b3w6MUdd99DV
      66OQK1Kr65hIOB8VPExTp1yuYCkqsgR6McHHH33Ev8/UGIpa1KoV6oaFosjYvUFm/vQrPv70
      BpknP1JMEL5ybJVgyzRBlpEA0zSQtDKTExMoLee4fKYNrIOKK8goqoJkmeiGAZKMqihYloUs
      y1iWia4bSJKMLEtgmRiGiaSoKLKEaRwERn70uqHrWEjIioz8qH1RCRaV4Cc5tl0gSf56cJFl
      BWwuzl0ax+nyHExTlmRstm9sZJKCTf56A/1yw5AkGZvtmwOVzDcWQ1Ft/+kWieox/ycIL5fn
      d6pEVvF6xVNbhNNFFMKEhiYCIDS0QwegVilRKBQolSuYloWuaU+stB7cpVl/BqtnoWm6qOgK
      x+bQAbj353/jrzdv8udP/8RyPMfS1AylJyyrl8vMLiw8g9Ur8WBqCXGNl3BclA8++OCDwyxY
      yFUYe+sNAlSoyV6s/C6bW8ssbOZob/eR2MjgDblIrcXA42RjboL5pW0UfwseK8+tG5+zFMsS
      aYmSi68zPzfF7EaOro4o+Z0lbnxxD90Vwq9Wmfj8GguJMt1dIdYfzLG6vkLO9OAhT8l0U0st
      E6vYCVoZElWV1MIEt6YXwNOE11ElFdvlzvwGPR1RJEnCNE0kSUKWn553y7IwTfNQp0y/D8Mw
      UBTl2E+DGoaBqh7vuQ7LsrAs67l8Z8+6L4ceAfbjc3z0698yl6gS9rtArxLuu0SvXCVZy7K+
      soOBQWJlgwpg87Xy1ltXWX9wh3Lt4Px+Nr7GwsYOyfV1Av2X6TaL7Gr7fP7ZJFWtyt3PrrOd
      WCVRcdLd3owE1E2Fi6+Oo8fWydarJGKbrMVypGLrbCxvgWphApJZZGJilnIlxe0vlhg5P/RM
      vyjh5XToOIXbR7h09Sq1rRXWd5O4HEE6WkOU97xUJLAsA6NepVCp0oaEy+PF7XSiKhKx2CaB
      lkECzm0Keg23K0x7S5BC3INuVJE8bVy6ch7FNPH6XFxml7Wp27jaf0ww0kYwEMTnVvD7A6wu
      LRJsCuEoltiVTS5Z+yzkXVy4eI67k7tossrA+Qs0+463+CO8HA5/EFzc5j9+/Wuuz27S2tKK
      x+9HAeweDy4lSNi9xx8/vkHd4cGuypQTi3z4248J9YzQ1dLE5tI08aJFwOvG4/cevNfnw+GI
      MtypcPvGdRY202iVHA8fzFJyRwgpCj7/QeHM7fdjc/lpdum4Qx0MRG1UbS3YXGF8RoJ7sxv4
      wkHsiguf2PiFQxIXxT9GTIU4uhd5KoSoAwgNTQRAaGgiAEJDEwEQGtoJBMAglTrE1VqWRTqd
      wjCPf42ExnUCAdBYX48dYjmLra0NjJf+HJVwkk781glzM3fpPjtGNr6A4umgGJvhwXqa/rHX
      ASjsx9jZqxMNwuz9OTIljYHLb9Cl7vH5nXlkbxtvXO1lM2ky2Gbj5u1F3vjROMuLK5w/N3zs
      pxmFF9uJHwOUigUME6rVEvm9XZK6j1/+4y8Z6QqTjy3wpxsPae/tRNJ1Iv0X+emP38Yo7jC9
      vMNPfvFPjHfASlZBzsbY2U/hd8BGMkGl5gbxiAzhKU4kAKZWJZPJkC9VwNTJZlJsbyfBZsOs
      V9nPZChWavg7hhgf9LG6lcJAwetxocgqqirhkQx20/ukcjWcDieBEKws5uk+38/O5F2CfZ2I
      H3/haU5gF0ilPaRw7949PNFehgcHmFlcJtQ1RFt7O60+g+mZWTqGL9LR0UW4qRn79iY2XxiX
      6kC1K7S1dhDq7WBycho10sfFqA/D20fFrtHsbyJzZoTe4PHOTBReDmIqxGPEVIijE1MhBOEF
      JQIgNDQRAKGhiQAIDe3EC2FPYlZz3Lh2jb2qwvkrP+RMe+Bw7zN1NM3C4RB3iBOe7tQGILt8
      F/nM2/yiXSFTtDD0Osg2JMvAsGSwDDB1DMmGZNSo6yZ2p4tKNsbSZpmRkX7cToeoBQjf6tQG
      INA7zP7HH/Mfi6289fZrrM99gdz+KoHaAmuFFszMQ4qZIi0XxiE+x2amiBrooVVK8HA5g253
      8oPRvpPuhnDKndoAKN42fvHP/43y/gqTUyu0uR87YNFVxt//ezxWnmtzRWq1Esn1JK/8Ygwp
      UOX8OfGADOHpTm0AMusPuLO2h2pUUFtGsSsSM5PXkGp7NA21oDg9uBVA06iZKsFQGE1XUSSJ
      zcVJqsArw91iF0j4Vqe2EmwaGvl8HhMVn9+HbGoUCiVkmx2H0wWmgd1uQ5IOnkFWMyTsNgcu
      t51yIYchO/F7XEiSqASLSvCTndoRQFZsBENNX/9BcRAMf7PzX2/Mbl8Q9zde8fpDx75+wstB
      1AGEhiYCIDQ0EQChoYkACA3tdAQgs8LEyj5aKcXnn92mIu4EITwnp+cskFVnaX6NrtFL2LU8
      U9MPqMpBxi4PU09vsxlPUcPD+fMDZBIbxONJPK1nGGq1kyjb6AgoxFJlok028ntF1vcKvDJ6
      RlwUL3yr0zECAAu3P2Ep46Qt7MIyahTzJdJrk0xvVYivPaTuasZl7hJPFVlZS9De10/q4Qzp
      /W3mt7OgF5lf3qZa3uHGtRnC0ehJd0l4AZyaEWBo/H2aymssbu7Roa1hRnroc5bZKlaI+kI0
      d3Vj7ecpmhYOX5i2aAtZzxKaZWGZJlq9Rk3TQVLpPTdGX0vwpLskvABOxwig2HE5HPQOj2Lu
      rlN1BdlfmWW3rOBzqtgdLlQZVJsTuypRjC/w4Ye/IWFrormpA3n7Dn/4611MRUVWHHg8x1vF
      FV4ep3YqxBMZFabmt7g0evbQbxFTIcRUiCc5HSPAUSiuI238gvBtXrwACMIzJAIgNLRTcxbo
      RVO/+z+pT/7Ld36/ZYH2HEoUz6UdCyygdsztHEdfjj0AmZ11tnfzyA4ffX3duO3f/ZaF5VwK
      3M24T8H17la9jFXa+36f8YzWpZHaedZtHPsu0NbWBpLiwMxt8WBt93t91s7qNMnSM1oxQeA5
      jACSouLxetA0FzhtVLMJbn4xSc3RwltvjbM28TFb6TK2UD9vXB1geeoLlmN5IgMX+EGfiz9/
      NkHN3sSbb40ffKBWZno+xti5M8zPzzLQFWFhLU02m6GtM4rd1UZ7U4XFJZ1zI23iBunCtzr2
      EcCoFtlcX2e/rGOTLZYmP2c9WyWzdof5nRqlqsSb7/89nY4C27txdFc/P//Ze5jFJJYBKBL5
      rSWWdh49VsnUSe1nAdjfT2NoZTa2s4xcvopHKlIoa5hGhf10+bi7JrwEjn0EsPkivNJ/Abm0
      zuR2lqgjwPi7r3PGb1IxZDa8ARx2G3a7DdOyMCwTvV6mrsPW8hpnfvAuZ1fvkTK/niJq6Tr1
      eond3SzWSBct3QM0eR3spECr18nu7FCi6VvWShAOHPsI4Fd1Pv3kP/jL9C4jZ7oZuHKVzPRf
      +fjzaUxFJtrWhgIEo220RFqRC6t8fG2SumWj99wgy198xo4ZoL3JS7Clj6Dfy2ibnT98coP2
      wWFsziBtzR4Amlp6KW3fYT4lc6ZLXBcsPN2pmgpRL6W59fkN9jUHV998m46g85l87nFMhah9
      8T+o3/zvz2T9hJNzqgJwXI4jAFatgFUrfOd10jQNVVWPfS5QvV4/9nlNpmlimiaqerx71MfR
      l4YIgGEYGIZx6OVN00SWj3fv8Hm0AQd9P0zwvw/LsrAs69j7cxx9aYgAHIVpmhiGcewzG8UI
      cHTH0RcxF0hoaCIAjznsscL39TzaeF7tSJL0XHbnjqMvYhdIaGhiBBAamvLBBx98cNIrcXJM
      thamWdjOEAyHsSsHvwdGrcD9u3fY3KsQiYSo5RJMTz0gp9toCnmPPL9Ir+SYmZ4mXbPR/I33
      Z3fWmLo/Txk3oYCL8n6Mu3cfUJbdhH3uI97a3SKf3ODO/QUcwShuh4IEWEaN9YUHPFyN4wo2
      HczGNSvcn1kmGA6jKkf9DTRYfXCH5WSZSFMIVT5YyXppn+l794hlNVqag5TTMaamH5DVVJqC
      PuQjfmn1YpqpqfsULTdhv+ugL5bFfmyJqZkFdHuAoEdlZ22euZUd/E3NONSjn1Bo6BGgFJtn
      KWcjJOWYWoo/+qtBfG0DX1svYW2bucQ+D+4u0NTdQz3xgLU97YitWKw8uIfli1LZnGYt8+X7
      i2xuFenq6yG7Pk0itc+te0u09/UT/A7zvfVShnvzG3R1NXN34g6mebBnm0vvULF8dDU7mX24
      jGVZbM9PcXd5nWrt8KeGv+xLYW2KtVoQfy3G/Y39R3/X2F6PE+roxV9YYG6vzuZWiraeXqrJ
      BRLZo35nJnNT93BHWkkv3yOR1w9at/Jsxmr0DXQTX7xHfGuDxWSVqNfk7szSEds46E9DByCV
      qjI0MsDg+TOQK3CwOch0Dp2nrzWAIflo8jnxelTy2SyG7MHrOuqBWI1y3cvZM32cOd9DIZF9
      9HcPF66OEnAqODxNmPV9FMVNtVhAUo4egEq1QjDaQ2dnL2GnhPYoAIHmbs4NdaNICuFQALOS
      YqPoZajdd+Q2wCKeqHHx0iBnx4ap7WY4mKGl0jdynq6IF10OEvHaOHfpEhGvHbvDj8d51O+s
      ii6F6e/rpbe/hdL+QcFRkvxcGh/Fo4LHH6GiVejpGqC3fwDFqHyH/miNGACD9anr/Op3n1N5
      tJEgSd+40kLCrBW4PzOPt3uITr8NFBuWoWOYBpp22F/NAn/97W+4Pr2BicTX+01fNiSRT6yw
      EMvTd24Ej2pg1HXqtRJf3JpEP+SlH5n4Ah/95vds7BW/2mWSvtEKRp31pTmy+BnujTIzcRd3
      OEAuk2E/W+Rwd6Gs8/DWX/jtxxPUkQ7aeew704ppZuZXCJ+5SKtTppzeZG41RefQeUKuw21m
      ppHhk1/9iomFnYPvjMfbgczWQ5aSNc6ODONUHn2tR97zKfHFH37HXyYWG/EYQCbY2s25s924
      9TT3NwpIuQR5R5iusAtNN1idmkRtP0PQbgE1lpdTdA/0YhR3qKpRooHD3JrDQc/QMN2tTeR3
      FtirqaTXVvD1DeOW6shKhcmJVXoHe5AxcSp2dvN5ero7Se+m6enrRjnEQYDLF+Hs8CAhl8zi
      4jJOp8zaTo4zve3U6jrZxDLxkoOuqB/DANOsUszlicdjuIMdtEQDh/gVVIh09jI00IFb22Fq
      s46ZXKUW7qLNq6KbOgv3pvF0DeBVTWSbxMzkA9oG+rFJJqpqRznEQYAku+g/d46OSIDdjVnK
      koPk2gZNfWewWxqyVOD2nRhnz3RimiZOs8bC1i6Klidds9Pb0XyI/xcAO52DZ+ntaG7EAHzN
      HoggZ7dIVN1cGhnAKO+TLVvIRonNjU2SySSKv5uBVhsLD5eQg/2cH4ge8YBOIhAKkVhbxt42
      zFC7l52tBG6fi71EnPjODqlsieaOXqJOjbmFdXpHLtHkPdojXhW7k5BDZ3YpzsUr43iVCtvJ
      Mm6HQWxrm0QyScFyMXpumI6ODqLRKN2drV8d+B+2L45QK/rOAntylMtnO6nm9ijrMkY1x9bW
      NslkEkcoip5JEdtJkNzPE4xEj3gprERT2M/a8grBvov0RhwkYrt4vHZ2YzHiyat61UsAAABl
      SURBVCR7hRqd/YO46mk20iaXL5/HoRx1KJBEHUBobA14DCAIXxMBEBqaCIDQ0EQAhIYmAiA0
      NBEAoaGJAAgNTQRAaGgiAEJDEwEQGpoIgNDQRACEhiYCIDQ0EQChoYkACA3t/wFkNW2I9tgz
      CgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='71' name='Quantity' width='192'>
      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
      0aP5HyclD6yKB/KsAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='70' name='Revenue' width='184'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Revenue by Market' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue by Year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales Quantity by Market' width='192'>
      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
      /XqwLZ3oxChJy02F34OtpTl/tpeErlIVCWIWEpzv7SNt+6ip8F/rVzoWRceL54b6JUjOTTAV
      04hEgtjFHBd7TzE8NoWhVlAZkBg6f5bphE5VVYRcPAaBAOQWiWZkQn6V655wCpvU/AS95y+R
      x0912EdsapALg9MEKqvwKTA3fpkLwzNE6uqxUwk0VUU188wsZgkFfddvC0BYzI5e4sLgOHIg
      QsBlrZ4RQBgZevuGqGlpoP/0GXRgZnycQmaOS0NzuG70yw/Y6VnmrDCdnZ00VgWID/cyTzX+
      5CAXonkW56fI5fMM9fejSzfvzcgtTDGbKRCfWwJgoK8HV1UjqalLzMSSDPaew13TxMLFHhZ0
      mB4fp5iOcml4AZf7BvuVnWckniU2s4AF5DMxsnaAzs4N1EV8zA70kVSqkFNTDM3EiY2PkzEL
      nDszgDtwY2ctW1qOqcU0a9a2MX3pIvncNH1X0jRUSvT2XSG1NMPlqSzN1TJnei6TnpklrmuM
      D1wia95YtwCM1DwLmpv21iqGLgyRySdWjwDMXB6lpol1rW10VbhYMCCXnKen9zKtGzcSVG/8
      rchniggzSzpbRFEkFpdgy9b1dO3ZTGYqhqXluNTXi1HRRkv1zR/FGmpcT/f6RpSrTSyisr59
      DZ2tLWTTUdJqHV3r1rBnU4iJRZNsYo7TfYO0dXUSUG6wX8EGdnevw+8u3afraYpZk3SuiKqq
      LBZh87p2Nne2ks4WMLU0l3tOIa/ZTK1XuaFfZNkTpHvLViJeF/6qSqyFRWo2ddPe0U2tSBLL
      Jmlo20Rr+ybcpBBCY/JiDzOikvVNlTf26w8oFY1s7+rAKwvC1RGEkVodXqBrSG/+KwBhW+iG
      iX2TfgBPbStt+WkysUmmlrLU/9SABJIQCGFjGDqWJRCCZUnrKL38my8kENdeV0JCCIGwLQzD
      XBbvUKiiicb6KJnFSc4kDQKU3sZSjhWlPuompn3jtiQEiflJJuZydG/txjV77mrfJLiWy/v2
      N800DHDZcBNdk7CZujJIRvjp3rgGl5laPSOA4vdhLEaZjM5yOWlRp0KwqokD+7YxOzhAWrfe
      /0V+hkw6hSdQTUNtJZYhqKm0uTQwwfDZy/hba1G8Ibbv3Y8vN8VE7Earmb6JUcyRTKTIZNJk
      8kXcQmNiepaRmRmC4UaC2gJDk1HODqZoq1MJVTdzcN9WpgYGyNxgv2xTI5FIks1mSKezZJIJ
      PFV1NNRVYWoa1W7B5YlpLl+ZIRz0onojbD14D66ZfubyBjeiOauQpP9KlKbWRsx8FnddDQuD
      A0yPD7BIhJpABXNTg0Snr6CJEJLkYd3OA7SrKYZnYjdkC0BfGmN0CepqwmiFAtlkYvUsgiWX
      h5oKhaHLY6zbsYtqvxtFUQhV1RPxSei2it97Y3NYt1thdnSIaEZi+/YuquoayM8Okva1sXNd
      LYqi4guEqa2JkM9rVIT8N9X2dHSUi1dmMI08BclP96Z2poYG8TZ20tFcS1VNmKnhQcLrt9Ne
      5cd1tV8VXjDw4L+BbahmZpGz54cwhEE6Z9LU0sj8lQGiWRd7dm+htq6O5NQQRV8jmzuaUVUF
      fzhCU32YxJJJRej6Exht02RpYZKpmXnm5zPUd3ZRLSUYmdPZtqOLSDiC21hiZE5nz95t+NwK
      nkCAutpqipkiwYog8g2MqoZWZH52gmh0nmTWprm90YkDOKxuVs0UyMHh3XAE4LCqcQTgsKpx
      BOCwqnEE4LCqcQTgsKpxBOCwqnEE4LCqcQTgsKpxBOCwqnEE4LCqcQTgsKpxBOCwqnEE4LCq
      cQTgsKr5/wE5i4NQfdodJwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='179' name='Top 5 Customers' width='192'>
      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
    </thumbnail>
    <thumbnail height='179' name='Top 5 Products' width='192'>
      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
    </thumbnail>
    <thumbnail height='45' name='Year' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAAtCAYAAAD4BmRbAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAE8ElEQVR4nO3cb2wTdRzH8XevvV7bMf5tEkYCNGMGHjjNZDoUEsxEIySyhIUQENBgoqBg
      QqIPhAgYXULCEh9I0CcqETUGown/CRCUiHGUDgh/nPhngT0QxOEygV7bu1590KFzMNhu23Xz
      9309Wu6ud7/fJ/e567VLfdlsNosQitLyPQAh8kkKIJQmBRBKkwIIpUkBhNKkAEJpUgChNCmA
      UJoUQChNCiCUJgUQSpMCCKVJAYTSpABCaVIAoTQpgFCaFEAoTQoglCYFEEqTAgilBVy9ykng
      /LSF5LFdZP68Cuj4Rlaiz9yIUVrUabvfsI6sJ3X2e7J2N9v8s+1VMsfXYTZcQV/yBcboTut+
      Wcu1XTu6HY726G4KqqKupuIZrzO7uf5UPanYITKmCYEi/KXLMR5fiD80kJPtBx7l5aoA9oHp
      mJdmYVR/Tnh8CT4SZE6swtxRS7b2EKEJAaAde/8iki0VhBY3oo+CTPyl3DY1ewiVFnSaaD3m
      we04hMGJ3nrAsjoKV9d1HQX2wZmYZ8cRuPc2rxlkPM+MG9gHajGbJxF8ej+R8UVwLUZq54sk
      tl4g/MLrBAbx/d+rvFxEkMRX9i7Dnt1EcGIJPg3QIvgrl+CnFfvnk7nNrnxC6nwr/ukb0EcZ
      gIG/so5gSStWbCfOzd0115P4sQhjUYzC2U/2Yhj7sX5oh9JlBLte+QadPGSW/hqrqRWtYg3G
      +I6rYeHDGNXP4TM/xWoe2Bn3jXd5ubgDhPCXzbh18V+XyAI+oxAA5+JRHKowSkd02mgsgUnl
      pI4ewr6xkGABULaOYWUdq9t6PopM/H1sJ0rwkdn4ej8Jj+Uhs8Aw0CBrJW+zUs+dVIOWd3n1
      TwztuzE/qyMTrsGonJIb3B9ngLFoBV0OOKoUOIHzex+Ol95HuvECRJcTHNOH/eTTQGemzcCY
      Vk725NukLl7JLbsWI3V4K9mxqwlG+2EOXhqgvNw9BP87KjLH1mA2HCE7vJbQvDcI9OjhyiLr
      3H2r7jgnP8R2itGnPjUErv5deZVZAK3qAyKsxPyqmnTHUt/E9UTmzkcb1HeAzgY2L/cFSDaQ
      3L4Kq20k/mkfE37owV7cVvtwC3YaSDc2QclaghP62F+veZpZO/beGsyWCkJLY+hFEUieJr37
      FRIfnSW85M0enkh55EFe7k7D9FGS21ZgJaZiPLOPSNWtA9PuKQcu49z473KnrRmYgubywdU5
      9R5WagT6tPlD60sMrzNr2ULyfCuB6k25kx8gdD/Bua8SuP4lydi5PkzGAx7l5eocysQ2Yl0f
      gT5nM8Hi21+FtYkz0DiG3dzeaell7F/PQPETBEa6OLBznHSsEYqfJxgdWld/zzOzk9zxV4+t
      RC925j2v8nJRgONYpy/A6EV3fgsyZjHG5GIy323AaksBKTLxtaQvFaNPX+CqedmmbVimTqDS
      3evzJw+ZRZcSHKNjH34N62rHyZ5uxtpXj62Voz9Q4X46A867vHy9/3n0bzDfWYnd3erJmymc
      81ju7x58S2fvvQ/zfHc7qyG8ui73oOKcI7V1AWlWEFn2Mv7eDTrP8pSZ3YL17Vukm+I4KQu0
      4Wjj5hGctarjc/PByru8XBRAiP+PofVOQoh+JgUQSpMCCKVJAYTSpABCaVIAoTQpgFCaFEAo
      TQoglCYFEEqTAgil3fV/iuPxuBfjECIv/gbW8fEkFFwxVAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
