<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1211.1636                               -->
<workbook original-version='18.1' source-build='2019.4.1 (20194.19.1211.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='transactions+ (sales)' inline='true' name='federated.00v48pe0n3djwf125idi9055ibf8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0eiexik0ktmrlz17ml4zd0pkfhxb'>
            <connection class='mysql' dbname='sales' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[transactions].[product_code]' />
              <expression op='[products].[product_code]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[transactions].[market_code]' />
                <expression op='[markets].[markets_code]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[transactions].[order_date]' />
                  <expression op='[date].[date]' />
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[transactions].[customer_code]' />
                    <expression op='[customers].[customer_code]' />
                  </expression>
                </clause>
                <relation connection='mysql.0eiexik0ktmrlz17ml4zd0pkfhxb' name='transactions' table='[transactions]' type='table' />
                <relation connection='mysql.0eiexik0ktmrlz17ml4zd0pkfhxb' name='customers' table='[customers]' type='table' />
              </relation>
              <relation connection='mysql.0eiexik0ktmrlz17ml4zd0pkfhxb' name='date' table='[date]' type='table' />
            </relation>
            <relation connection='mysql.0eiexik0ktmrlz17ml4zd0pkfhxb' name='markets' table='[markets]' type='table' />
          </relation>
          <relation connection='mysql.0eiexik0ktmrlz17ml4zd0pkfhxb' name='products' table='[products]' type='table' />
        </relation>
        <cols>
          <map key='[currency]' value='[transactions].[currency]' />
          <map key='[custmer_name]' value='[customers].[custmer_name]' />
          <map key='[customer_code (customers)]' value='[customers].[customer_code]' />
          <map key='[customer_code]' value='[transactions].[customer_code]' />
          <map key='[customer_type]' value='[customers].[customer_type]' />
          <map key='[cy_date]' value='[date].[cy_date]' />
          <map key='[date]' value='[date].[date]' />
          <map key='[date_yy_mmm]' value='[date].[date_yy_mmm]' />
          <map key='[market_code]' value='[transactions].[market_code]' />
          <map key='[markets_code]' value='[markets].[markets_code]' />
          <map key='[markets_name]' value='[markets].[markets_name]' />
          <map key='[month_name]' value='[date].[month_name]' />
          <map key='[order_date]' value='[transactions].[order_date]' />
          <map key='[product_code (products)]' value='[products].[product_code]' />
          <map key='[product_code]' value='[transactions].[product_code]' />
          <map key='[product_type]' value='[products].[product_type]' />
          <map key='[sales_amount]' value='[transactions].[sales_amount]' />
          <map key='[sales_qty]' value='[transactions].[sales_qty]' />
          <map key='[year]' value='[date].[year]' />
          <map key='[zone]' value='[markets].[zone]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[market_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>market_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_date]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>order_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_qty</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sales_qty]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_qty</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sales_amount]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_amount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[currency]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>currency</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code (customers)]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>custmer_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[custmer_name]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>custmer_name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_type]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cy_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[cy_date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>cy_date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month_name]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>month_name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_yy_mmm</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_yy_mmm]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_yy_mmm</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_code]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_code</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_name]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_name</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zone]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>zone</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code (products)]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_type]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_type</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Normalized Amount' datatype='real' name='[Calculation_826973501527113728]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount] * 74 ELSE [sales_amount] END' />
      </column>
      <column caption='Blank' datatype='string' name='[Calculation_826973501536772098]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot; &quot;' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
      <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
      <column caption='Customer Code (Customers)' datatype='string' name='[customer_code (customers)]' role='dimension' type='nominal' />
      <column caption='Customer Code' datatype='string' name='[customer_code]' role='dimension' type='nominal' />
      <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
      <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Yy Mmm' datatype='string' name='[date_yy_mmm]' role='dimension' type='nominal' />
      <column caption='Market Code' datatype='string' name='[market_code]' role='dimension' type='nominal' />
      <column caption='Markets Code' datatype='string' name='[markets_code]' role='dimension' type='nominal' />
      <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
      <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
      <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
      <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
      <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
      <column caption='Product Type' datatype='string' name='[product_type]' role='dimension' type='nominal' />
      <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
      <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column caption='Zone' datatype='string' name='[zone]' role='dimension' type='nominal' />
      <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Blank,YEAR(Cy Date))' hidden='true' name='[Action (Blank,YEAR(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))' hidden='true' name='[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
          <groupfilter function='level-members' level='[qr:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Markets Name)' hidden='true' name='[Action (Markets Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[markets_name]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.782158' measure-ordering='alphabetic' measure-percentage='0.217842' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='customer_code (customers)' />
        <field-sort-custom-order field='custmer_name' />
        <field-sort-custom-order field='customer_type' />
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='cy_date' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='month_name' />
        <field-sort-custom-order field='date_yy_mmm' />
        <field-sort-custom-order field='markets_code' />
        <field-sort-custom-order field='markets_name' />
        <field-sort-custom-order field='zone' />
        <field-sort-custom-order field='product_code (products)' />
        <field-sort-custom-order field='product_type' />
        <field-sort-custom-order field='product_code' />
        <field-sort-custom-order field='customer_code' />
        <field-sort-custom-order field='market_code' />
        <field-sort-custom-order field='order_date' />
        <field-sort-custom-order field='sales_qty' />
        <field-sort-custom-order field='sales_amount' />
        <field-sort-custom-order field='currency' />
        <field-sort-custom-order field='Calculation_826973501527113728' />
      </field-sort-info>
      <filter class='quantitative' column='[sales_amount]' filter-group='2' included-values='in-range'>
        <min>1.0</min>
        <max>1510944.0</max>
      </filter>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Revenue by Market' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.00v48pe0n3djwf125idi9055ibf8' />
          </datasources>
          <datasource-dependencies datasource='federated.00v48pe0n3djwf125idi9055ibf8'>
            <column caption='Blank' datatype='string' name='[Calculation_826973501536772098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_826973501536772098]' derivation='None' name='[none:Calculation_826973501536772098:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='5' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.00v48pe0n3djwf125idi9055ibf8].[mn:cy_date:ok]' value='iLLL' />
            <format attr='color' field='[federated.00v48pe0n3djwf125idi9055ibf8].[mn:cy_date:ok]' value='#f28e2b' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00v48pe0n3djwf125idi9055ibf8].[none:Calculation_826973501536772098:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.00v48pe0n3djwf125idi9055ibf8].[mn:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{6B6296B5-259C-43E3-80D2-A8AD23850044}' />
    </worksheet>
    <worksheet name='Quantity'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.00v48pe0n3djwf125idi9055ibf8' />
          </datasources>
          <datasource-dependencies datasource='federated.00v48pe0n3djwf125idi9055ibf8'>
            <column caption='Blank' datatype='string' name='[Calculation_826973501536772098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#f28e2b' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='18'>Æ  </run>
                <run bold='true' fontsize='18'>  Sales Quantity </run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='18'>     &lt;[federated.00v48pe0n3djwf125idi9055ibf8].[sum:sales_qty:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{52E4B0F3-8210-4771-8EA9-82D63E0B484E}' />
    </worksheet>
    <worksheet name='Revenue'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.00v48pe0n3djwf125idi9055ibf8' />
          </datasources>
          <datasource-dependencies datasource='federated.00v48pe0n3djwf125idi9055ibf8'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_826973501527113728]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount] * 74 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_826973501536772098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_826973501527113728]' derivation='Sum' name='[sum:Calculation_826973501527113728:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#f28e2b' fontsize='18'>Total Revenue</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#f28e2b' fontsize='18'>&lt;[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{05231B42-736C-4173-960A-B315A2A704E3}' />
    </worksheet>
    <worksheet name='Revenue by Market'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.00v48pe0n3djwf125idi9055ibf8' />
          </datasources>
          <datasource-dependencies datasource='federated.00v48pe0n3djwf125idi9055ibf8'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_826973501527113728]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount] * 74 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_826973501536772098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_826973501527113728]' derivation='Sum' name='[sum:Calculation_826973501527113728:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.00v48pe0n3djwf125idi9055ibf8].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' value='c#,##0,,.00M;(#,##0,,.00M)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='878' />
                <format attr='maxwidth' value='878' />
                <format attr='minheight' value='280' />
                <format attr='maxheight' value='280' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00v48pe0n3djwf125idi9055ibf8].[none:markets_name:nk]</rows>
        <cols>[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]</cols>
      </table>
      <simple-id uuid='{46A3B98A-D309-4F56-8C3A-D165589AF1C3}' />
    </worksheet>
    <worksheet name='Revenue by Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.00v48pe0n3djwf125idi9055ibf8' />
          </datasources>
          <datasource-dependencies datasource='federated.00v48pe0n3djwf125idi9055ibf8'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_826973501527113728]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount] * 74 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_826973501536772098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_826973501527113728]' derivation='Sum' name='[sum:Calculation_826973501527113728:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' scope='rows' value='' />
            <format attr='height' field='[federated.00v48pe0n3djwf125idi9055ibf8].[mn:cy_date:ok]' value='39' />
            <format attr='width' field='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' value='32' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' value='c#,##0,,.00M;(#,##0,,.00M)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.00v48pe0n3djwf125idi9055ibf8].[mn:cy_date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' />
              <text column='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]</rows>
        <cols>([federated.00v48pe0n3djwf125idi9055ibf8].[yr:cy_date:ok] / [federated.00v48pe0n3djwf125idi9055ibf8].[mn:cy_date:ok])</cols>
      </table>
      <simple-id uuid='{ACDC5914-0F28-4B51-A365-94C537DF1F45}' />
    </worksheet>
    <worksheet name='Sales Quantity by Market'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.00v48pe0n3djwf125idi9055ibf8' />
          </datasources>
          <datasource-dependencies datasource='federated.00v48pe0n3djwf125idi9055ibf8'>
            <column caption='Blank' datatype='string' name='[Calculation_826973501536772098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.00v48pe0n3djwf125idi9055ibf8].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:sales_qty:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:sales_qty:qk]' value='c#,##0,.00K;(#,##0,.00K)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:sales_qty:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00v48pe0n3djwf125idi9055ibf8].[none:markets_name:nk]</rows>
        <cols>[federated.00v48pe0n3djwf125idi9055ibf8].[sum:sales_qty:qk]</cols>
      </table>
      <simple-id uuid='{1CAA7C34-5A33-41A6-8BDE-FFB02DC75A0A}' />
    </worksheet>
    <worksheet name='Top 5 Customers'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.00v48pe0n3djwf125idi9055ibf8' />
          </datasources>
          <datasource-dependencies datasource='federated.00v48pe0n3djwf125idi9055ibf8'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_826973501527113728]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount] * 74 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_826973501536772098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_826973501527113728]' derivation='Sum' name='[sum:Calculation_826973501527113728:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[none:custmer_name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_826973501527113728])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:custmer_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.00v48pe0n3djwf125idi9055ibf8].[none:custmer_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[none:custmer_name:nk]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' value='c#,##0,,.00M;(#,##0,,.00M)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.00v48pe0n3djwf125idi9055ibf8].[none:custmer_name:nk]' value='80' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00v48pe0n3djwf125idi9055ibf8].[none:custmer_name:nk]</rows>
        <cols>[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]</cols>
      </table>
      <simple-id uuid='{589880A5-31B1-46BB-A405-220980B5EE54}' />
    </worksheet>
    <worksheet name='Top 5 Products'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.00v48pe0n3djwf125idi9055ibf8' />
          </datasources>
          <datasource-dependencies datasource='federated.00v48pe0n3djwf125idi9055ibf8'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_826973501527113728]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount] * 74 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_826973501536772098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[product_code (products)]' derivation='None' name='[none:product_code (products):nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_826973501527113728]' derivation='Sum' name='[sum:Calculation_826973501527113728:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_826973501536772098]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[none:product_code (products):nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_826973501527113728])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:product_code (products):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.00v48pe0n3djwf125idi9055ibf8].[none:product_code (products):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[none:product_code (products):nk]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Blank,YEAR(Cy Date),QUARTER(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.00v48pe0n3djwf125idi9055ibf8].[none:product_code (products):nk]' value='56' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00v48pe0n3djwf125idi9055ibf8].[none:product_code (products):nk]</rows>
        <cols>[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]</cols>
      </table>
      <simple-id uuid='{3CC32977-D371-4A6A-BFB3-B3C8BA17E41D}' />
    </worksheet>
    <worksheet name='Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.00v48pe0n3djwf125idi9055ibf8' />
          </datasources>
          <datasource-dependencies datasource='federated.00v48pe0n3djwf125idi9055ibf8'>
            <column caption='Blank' datatype='string' name='[Calculation_826973501536772098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_826973501536772098]' derivation='None' name='[none:Calculation_826973501536772098:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.00v48pe0n3djwf125idi9055ibf8].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='5' />
            <format attr='color' value='#f28e2b' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.00v48pe0n3djwf125idi9055ibf8].[yr:cy_date:ok]' value='105' />
            <format attr='height' field='[federated.00v48pe0n3djwf125idi9055ibf8].[qr:cy_date:ok]' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.00v48pe0n3djwf125idi9055ibf8].[yr:cy_date:ok]' value='12' />
            <format attr='color' field='[federated.00v48pe0n3djwf125idi9055ibf8].[qr:cy_date:ok]' value='#f28e2b' />
            <format attr='color' field='[federated.00v48pe0n3djwf125idi9055ibf8].[yr:cy_date:ok]' value='#f28e2b' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00v48pe0n3djwf125idi9055ibf8].[none:Calculation_826973501536772098:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([federated.00v48pe0n3djwf125idi9055ibf8].[yr:cy_date:ok] / [federated.00v48pe0n3djwf125idi9055ibf8].[qr:cy_date:ok])</cols>
      </table>
      <simple-id uuid='{099ED881-90AA-47CF-BA79-5EC0FC730061}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='900' maxwidth='1100' minheight='900' minwidth='1100' sizing-mode='fixed' />
      <zones>
        <zone h='14667' id='3' name='Year' show-title='false' w='69455' x='9182' y='2778' />
        <zone h='6375' id='4' name='Month' show-title='false' w='67818' x='21818' y='17875' />
        <zone h='53500' id='5' name='Revenue by Market' w='26867' x='1133' y='35000' />
        <zone h='11625' id='6' name='Revenue' show-title='false' w='33273' x='1364' y='22750' />
        <zone h='52000' id='7' name='Sales Quantity by Market' w='26091' x='28818' y='35778' />
        <zone h='18400' id='8' name='Quantity' show-title='false' w='33273' x='29364' y='23067' />
        <zone h='36667' id='9' name='Revenue by Year' w='43636' x='56000' y='22000' />
        <zone h='24556' id='10' name='Top 5 Products' w='21091' x='55091' y='60889' />
        <zone h='24667' id='11' name='Top 5 Customers' w='22545' x='77455' y='60000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='13' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='12' param='vert' type='layout-flow' w='98546' x='727' y='889'>
                <zone fixed-size='132' h='14667' id='3' is-fixed='true' name='Year' show-title='false' w='69455' x='9182' y='2778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='57' h='6375' id='4' is-fixed='true' name='Month' show-title='false' w='67818' x='21818' y='17875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36667' id='9' is-fixed='true' name='Revenue by Year' w='43636' x='56000' y='22000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='104' h='11625' id='6' is-fixed='true' name='Revenue' show-title='false' w='33273' x='1364' y='22750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='165' h='18400' id='8' is-fixed='true' name='Quantity' show-title='false' w='33273' x='29364' y='23067'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53500' id='5' is-fixed='true' name='Revenue by Market' w='26867' x='1133' y='35000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52000' id='7' is-fixed='true' name='Sales Quantity by Market' w='26091' x='28818' y='35778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='222' h='24667' id='11' is-fixed='true' name='Top 5 Customers' w='22545' x='77455' y='60000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='221' h='24556' id='10' is-fixed='true' name='Top 5 Products' w='21091' x='55091' y='60889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1AC0D431-03FC-4849-A8D3-129C4C7E927F}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00v48pe0n3djwf125idi9055ibf8].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A95F7CAB-0A07-443F-8162-3A63B47AEDFC}' />
    </window>
    <window class='worksheet' name='Quantity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6C5646A4-D664-494C-AFD7-4F31CDA2C205}' />
    </window>
    <window class='worksheet' name='Revenue by Market'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00v48pe0n3djwf125idi9055ibf8].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3CB0A4FC-99BA-41F6-A084-E79E718F453E}' />
    </window>
    <window class='worksheet' name='Sales Quantity by Market'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00v48pe0n3djwf125idi9055ibf8].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B887CBC4-B4DC-44BA-AD8A-8FF3C899A859}' />
    </window>
    <window class='worksheet' name='Top 5 Customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00v48pe0n3djwf125idi9055ibf8].[none:custmer_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{34D6299D-A25E-4EA7-9EF3-30C85C068DF3}' />
    </window>
    <window class='worksheet' name='Top 5 Products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00v48pe0n3djwf125idi9055ibf8].[none:product_code (products):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{16A4FFAC-9C2D-4B4C-9576-9B45708B7526}' />
    </window>
    <window class='worksheet' name='Revenue by Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00v48pe0n3djwf125idi9055ibf8].[sum:Calculation_826973501527113728:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00v48pe0n3djwf125idi9055ibf8].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{090C7A79-A21E-4AED-BD9C-1D3C88CEF65E}' />
    </window>
    <window class='worksheet' name='Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00v48pe0n3djwf125idi9055ibf8].[none:Calculation_826973501536772098:nk]</field>
            <field>[federated.00v48pe0n3djwf125idi9055ibf8].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A6706602-B338-4691-9FB0-79508DB47078}' />
    </window>
    <window class='worksheet' name='Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00v48pe0n3djwf125idi9055ibf8].[none:Calculation_826973501536772098:nk]</field>
            <field>[federated.00v48pe0n3djwf125idi9055ibf8].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6FE25709-8B10-41A7-8E2B-5E09AA082359}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Month' />
        <viewpoint name='Quantity' />
        <viewpoint name='Revenue' />
        <viewpoint name='Revenue by Market' />
        <viewpoint name='Revenue by Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales Quantity by Market' />
        <viewpoint name='Top 5 Customers' />
        <viewpoint name='Top 5 Products' />
        <viewpoint name='Year' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{13D89BBD-2F04-4328-9E5A-3190F0DF4BB1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9eXAc2X3n+cmr7hsoAIUbIEGQ4H03u9vqlluWZEuW5JEUkrXj1Wi19njt
      XcdGzMbaE3uMZyfCntmIGdu7tmyNrbHXlse3pZbVckvuu5tNNm+QxA3ivqoKdd+ZlZn7R5Eg
      QYIkAJIg0KhPBINA5ruyUL987/t+7/2eYJqmSZUq2xTxaTegSpWnSdUAqmxrqgZQZVtTNYAq
      25qqAVTZ1myIAeTz+aeSdytSfd6NrXdDDEDX9aeSdytSfd6Nrbc6BKqyrakaQJVtTdUAqmxr
      qgZQZVtTNYAq25qqAVTZ1lQNoMq2pmoAVbY1VQOosq2pGkCVbY280RXq85cwkrOIwS6MxDSi
      bw9m5gq4jiJKKfS5C4jNP4XkD2xYm8xCFD0yClhAi2EaClJjN+WJyyi7P0J55DRYvSidpzas
      TU8SIzGCkZhCcLVhxEYQHHWITgd6Mobk86GnIoieLqRgy9Nu6hIrtVmwShjJacTaXRjxaUTv
      DqT6jjWVu+E9gOhvxSxk0KevInf9BPr8GaTaDsxSAbFmN6YmIG7glx9AsAeBEmBg5AsI2iLY
      GhFEE0EwMLJRzGx0Q9v0JBG9bZj5GGayD8F3ECM1hli7B9QkRnoOZDf67Nmn3cxlrNhmfytm
      Po0+dRmp62Po4QtrL/cJtPWBqOe+hRjsQgw0UB75JwR3B/pCH8biCEbyOoJvL8IGt8mIvI++
      sIDgbgAzi1EyoDCNER9DXxxFsHjA0Da4VU8O7eq3wRZCrO3GiHwAkgt9sR8jPoZYsxfByCHW
      7HnazVzGSm1Wz38LsbbSU+nDryG4WtdcrrARm+IzmQxut3vD825Fqs+7sfVWRXCVbU3VAKps
      a6oGUGVbUzWAKtuaqgFU2dZUDaDKtqZqAFW2NVUDqLKtqRpAlW1N1QCqbGuqBlBlW1M1gCrb
      mg3bD6BHrmHmYojBg5TH38Wy/zNrzit4d2EW4shN+9ae192JER1E3vPxVa82XZY3fB1570+t
      Oe9GP2956n1MzUQKNKAnImvaw3A7bz16bB5l54+tOa/c0EF5fgxl5/NrrzfYhllSkYKd62jz
      2p8XNrIH0E2kunb0matgFjHLxprzIrkRbY511WtqZcTGA2tban2rXkNAsDhgDU1+as8ruxAd
      HhAkpIa968srWRCU9dWrR0cw1fS68gqeZoS1fiMf5XnZQAMQ67rQE4vIXT+GsvtTCPLqq76V
      V5ByGPkY5hriqd7KKzptmOlZzDV8D5fqddoRvE1r+uM8reeV/A0gKGBomJmF1We8M69pIPqa
      15VXbn8BZecL68prJm5gauq68q7neWGD9gMsLi5itVrXlTefz+NwrPFttIWpPu/GsWH7ASRJ
      eip5tyLV593YejekB6hSZbNSnQatsq3ZlgZglnOYWnldefXFfoxUpFJOIbmmvEZyClPPY2QW
      11yvWYxjFNd3nNAj1fsIn5VZSK3482owUjOsd2yiR/owtdUFMdjwuECbgvwEetoKZgZBEcG0
      IIVWFwVBn7+K3HKK8vhpzFIKwRlCbjm8qrzl4X9AbHweU01jJkSw1IDFiRR4ePwdfaEfDBPT
      YgGrBzOdQdpxYlXTunfXa8o1iA4ngq/l4fnzE5RjIlKND7MYx9QM5Kb9q3lc9IXriDWVOX0j
      Nobc8dyq8gHoM68j1PwYot2OWUhhZsNIHS8gPEwy6En0uRsIihs9HUWwWzHLIDeu7EvZlgag
      h0cwVAU9egOl7eia8oquJgSxQHniA8TaHZipGVilAYi1XRixKUQHaGPnEZz7sTzzxVXlNdLT
      YFpA0BCcLhBaV+3TuLteqeOTlBNzWHyrMLzwCKbuozw5iuiqWWWNYJazGNkY6HlMQ0FQlNXn
      1WKYqhOSVyhHypA3wKIhGjzcAFAQ3Ra0wVfBUBBrgpimAvcxgKoI3mIYiSlE/9rj39yJmZvD
      NOyIbv9jatWTxSzF0RduILUeR1hj0CgjMY3ov7+hbzsDyGQyT7sJVTYR21IEV6lyi23XA1Sp
      cifVHqDKtqZqAFW2NVUDqLKtqRpAlW1N1QCqbFkKmRTqWjYprcADDUCPDFI68w1KZ76B1vfd
      ZfdM06A8/u49eUxdQ73yF0tpSuf+kNLZ38dIzz9aS6tsaV579XtcuHCBH/zojcdW5sJwP/H7
      7J95983XKOomb775Jg+a5nzgUgipbjeC1Y3W/zLK3s9h5BbR+r6D3HQM01Apnf0GZj6G1HgI
      bfiHSA37kZqPYaSmKwWYJmZqGuuP/+9ol/8c5ch/i3btbxAcNUh1ezC1AqKnET3Sj2APUB59
      HaXns5i5SGUxVG4R5dBX0CdPI3d8hPL4O0itp9Cu/jWitwm588V1fXAbiWnoaP3fhWIaec9n
      EJ23lxPo8THM9Bxy+4P3zxrpebT+l5HbTiGFDq6+7mIaI34DqfEw5RtvIrU9hz59FrnjI+t+
      nkdFlmVmRvsYj2bRDQGhnOcjP3aK02euoOZiSILArpPHeOfl07gcJs994hQDQwUsyQmaDndx
      5fI4oPPJl14EDPqvXuZCPEbIJdJ57AV6z77Liy++yLPPHuc7f/1fOfrRT9N/+RxZDQTZSWON
      lbn5OWy+DkavvLO2IZD6wTexHPgS2uD3kYK7kRoOoOz9HMg2pKYjqJe/zd17Do18HH3qA7B6
      KPe/jFjThZmaxlRzlAdfoTx1FkwT7dKfYjn0FdTLf4Yevo5g84KhYyQnKY+/A0B5/B20a3+D
      1HgIPTKAkVv76saNpjz2FoLVjbLvn4GpU565QOns76MvjoCaw8wtYhYSlM79EXq4D1PLo178
      E7T+7y2VoV7+NpZjX0MbfAUjNbvs8zBLGdQLf4J67W8xTRNt+IeoV/4r5ZnzaCM/onTmG5X0
      kgUzPVPp0c/9IeWJ9zDVPHrsBkZq5ol/DpLVSSjgxOUNMD0zh0WRUSSJfW21vPqj99h5cD/R
      SAyXx00pX6Ctcxc97Q0Uy4AJJhCfnaYsW7BICpVdoiI9Bw7jddk4cvIkZ179W5y1nTfr8+IL
      huho8DK3EEaWJCQJJm6MI8ky8WiEUEvnGjWAqYPVjWDzYupapWWA1vuXoOYQZBsrrWEtj7+N
      FNqPWUxSHn4VUysiWJyYuoaxcA2p8RBGYgL10p8i+irrXARXHSjWewzKLCTRBr5fuW6sb5nu
      RiI1HkKffB/18rcRLE4ERwApdBD1/LeW0pQ++M9Y9n8Bre+76NPnMPUyUtMRAExdBS2PIFuR
      O34MPdK3zAAQBMSG/Rjhyjlr5RtvoPR8lvLA95FbTyG3nar0npOnEbzNSA37sJ74eZAslEf/
      ifLgKwj2J38oYXt7B02de2h0S+w5fAx0Hb/fT037XoK1XhpcDo4dOwyyHb/bR3NLEF+oGZez
      FlmbJy/IdO47TqMdvH4/EuBvbmW67yLBhmYExUnZtHB47+11Up2dlRMjT544jm6Y+P1+6kP1
      SIqDtrYQzS0tq1gNKlsRPY0AKHt+GvW930JwhxCdtQjOWrS+lxHr9qBHBhGctSCIiN7bi4/k
      piMoR/8F2qVvI+/+NOqlP6vckCzIzccxUlMIkgXl4JcxYqMIkqViZLIdwVlX+d8eQL3wJwiu
      BpSen0a79O2lMjY7gsWF7WO/jj57Ga3vOxjRIeTdnwLx9rJGMxdFvfLnFeNofQZkG6X3fgvb
      J34TJGXpOY3YGFLzMfQ73jHlidOYuSiC1Q16CcHqRrA4K/lECdNYeUe91HSU0uv/DsHhr0S8
      eMJ0dFTezO27KsvOT548sXTv2LFjAOzYfXvFptd5O+/xU88u/XzkxMmln331TRyvbwIgk4jQ
      feAo8h2L5W4ZgKemgRM1DTevNi5rV3UpxBNGjwxQHv4hmCbKoZ+lPPwqGAZmuYjc/UnM9ByC
      1UN59DWwepDbnqV843UQZSwn/yWCIFKeuYA+eRp9/ir2n/kDtKt/hVkuQSmLvOdTaH3fRRBE
      5L2fQ584jeXIz6Fe+jOUQz9L6b3fRm45iZGaQdn/BcrDP8RIz2A58Quo57+FVL8Xue3Zhz/I
      h5SqAWwhKmf4WhEdq1+Xfz/02Cjalb/A+tF/jSBuy20hQNUAqmxz1mz65Znz6NPnEaxuLEd+
      DiMfw1i4htz5Itrg9zESUwAo+7+A6KoDKlvjytMfYDn4JfT5a+hzlxHsfpSDX6Lc9zKmmkHZ
      9/nK2BUoT565nWb/FykPvoJZiKHs/yJmMYU2+Apyx0eQ6jbXYc5Vth5r9gSXR9/AcuLnsRz5
      OcyySnnwFbSRfwJA2f1prM/8Dxjpuco0JpVpUG34VSwHvwyCTHnsLSzP/CKWQz+LPnUWBJCa
      j6Nd/avbddyRxswvItbtRmp7DrX3r1DPfwvL4coY19TXFkVsq2Bko6gX/gva4CtLs2qmoaNe
      /Su0wR9U/CuGjjbwD5iGjqmX0fpeRr3wXzBLtzf8PCiNWUhSOv9H6HNXntZjbgrWbACCxYH6
      wR9UpvVkC8qh/wbhjhkNPXwdKdiNIFciwRnRQcx8jOJbv4kRv4EgW1Hf/13Uq3+N1HAAbfR1
      1LO/j9R22xl0ZxrR3YBg91VE3c6XKnXMXgS9hJmLPerzb0rM9AzKvi9gxMeWnIpa/8uIvjbM
      Yory7AXKw6+iDbwCpn7PS+IWD0pTOvv7KHt/Bq3vO5hq7mk96lNnzQZgOfELWJ/9n9CjQzd9
      AcvR+r5TcfrcRHDWIdXuwnLkq+jzvVhO/TLW534Ffb4XbeRHWI7+C6w/8W/RBl6+XccdaYzc
      IqX3fgfbC/8rYqAD64u/ChYHguJEsG+NPa1rRWo8XHGK5RMIN6egjdgoUugAUvNRjMVRlN2f
      QvSEAFZ8SQAPTqOriI4axNpd23qZypo1gHb1rzGLSaSG/ZilDFrvX2BqhYp3uO05xODum04u
      ldKbv4HtpX+DPvU+2sD3sB77OuqVP69M3zUfR+58EfXCH1Meewtl789QOvN7KHs/hzb8w6U0
      RmISQXGgXv42UuMhzFIWIzqI1PkCgmJ7Ah/J00cbea2yhOSl/wPh5i5wwVGDmY1gpuYQ7poF
      MvLxykvixV9DsHlWLHOlNKahY2bDCHbfk32gVbDaGKGPO5boE5sFMjILFafYTSH8UEwTPXwN
      qeHAk2jOlqL0wTdB10AQUXo+g9r7l1hP/HzFeywqWJ75RbRrf4s+dxnR315Z6zP6esWR1ngI
      fe4yyt7PUR57575pBLuf8tAPEDzNWA5+6Wk/MplMBpfTzuTUHC1NdYTjWWo8NsqClejsGDZP
      kIZggEwmg9vtfqS6YpF5ZKeffHKxOg262dkuL5JMJoNVlolHZomqCi7ZoLbORzZt0BC0MxPN
      0xKqfSwGkEnGWIzMgrNxewbG2kqI7oaHJ7oTQdhyX/5bFDIxJhczBP1e4qk8LrvA7EIBQ3PS
      2PJosZDuZGBggNa2FmYXZqs9QJXNwWrf7I+jB7iTag9QZVOQz68u8O9q062WqgFU2RQ4HI5V
      v9mrPUCVbU249yKlTJKYM0AsFiOdTvPCCy+QyWTo7+9nx44dnDlzBqvVygsvvMA777zDl7/8
      5RXLqm6Kr7LlmL90lpHv/x2yLHPkyBFSqRSDg4NYLBZSqRQ+n49jx47R09PDm2++SWfn/Y9d
      rYrgKpuCtYhguyLzzv/2S3i/8j/idDoRBIFgMIggCIyNjdHd3Y3dbqdYLFIsFlEUBY9nZQdh
      dQhUZcsh2+ygFTi0fx+SZfnpo0eP3j7vwel04nQ6786+jOoQqMqWJNhzgNSNgRXv9fb2ksvl
      OH/+PKZpkkwmGRwcJBqNUiwWmZubI5vNkkwmqz1Ala1J8OBJEn0XCOw5tOy6YRi4XC76+/tR
      FIVEIgHcPqu6WCzy1ltvsWvXLmRZrvYAVbYmgZ7DpPrP3XNd13Vef/11DMOgv7+fQqHA5cuX
      0TSNcDjM8PAwLS0tJBIJBEGo9gBVtiYWbwAzm8A0DATx9ntcURR+4Rd+AYCTJysRJJqamu5b
      TrUHqLJlcbd0Upi9sexa4v0fUpyfWHUZVQOosmXx7z9JdujS0u+mYTD9rX/H4o/+etVlLDOA
      C2ff5cKFC7x/7tL90q+Z8YtnWCiufO/a5TNcHxoD4Id/8xf3DXR65uzpe65Fp2a4T7FVtgme
      PcfIDd3WAZkrbxN45iUKA2fRc+lVlbFMA2QKKi+++Bw/+tFrZCIzXLkxi8vtRSgXOXToINeu
      XUfLp8kWyxx99gjv/OMZrDaJZz5ymPHJEnJugdDenVw+ewWLw8Wp44e5FcB0RC/jtQh0Hz5G
      f+9lDh8+TLZkIGmLGCU/6YyGakD/1YuEF/M8f2In/3hmlMP7ewC4cuEcLc2N9I9X2hQf6EWO
      7uLU4cNYNlk/lkqn8Hq8W67eTCqN0+vZMsMCa30remQCqLz9Y9/9Bi3/yzcpjPYS+av/SOi/
      +7cPLWPZs+qlHP/wd39Bbdseevv7sVtk5ufm8Qglrl3rxVLTyMjIGHZRZWwmgr+mmY4aB+mi
      SjpbJJtIMjnQS160s7AwvyyAqWCqdO9s5Ozp0+S023bntQic673B3n1dYJSIJ3LkFiaJZYs4
      apppaahhsu8DcnINA4O32xRqbOPg0af75R8bvMqZc+e4fG1w2fXr/f0PzDd47RIfnDvHqz98
      HW0Vfng1PsnQfBYoE40m6O+7tmK6B9X7R7/zn0iUDLLhEX73T7+zYprh/n5W6oT7+leuby3M
      TU8wNjnFwLVeFqbH6BtfYLi3l8IjlmsNBNHi82Tefxn3geeQPQHcRz6KHpuhNDvy0PzSr//6
      r//6rV9SmRwvvvQJZoau0NK+k3g6Q31DI909u3n/zGWeP34ItZBFsLppb2tAzYPbLmCtbWB6
      8DrJdI79p44Tn1ugtq6e5oY6SvksNyankGUb7Z1dXHjnDZ7/iY9jkQTS6RS7d3dxfWiajnof
      Vp+XmfFp7FaFxrYWDMlJvc+OYHNh1dI0NLUttamxzsn1/jFCjY1Iazw8+XGh5tPMRpK0dXYi
      qlmu9g0wMj6NKJqEvBZ++PYFRsfGMDJRBibnsNicuB02rg8O8vxzz+NnkbECjF+bIT19Hb2u
      mZHLlzh/tQ+vtsC7gzH6r/di11OcHw7T2lTL8MAIw/29aIKVoeu9NHW08e7b79He3sbA9V6S
      8RjTkTQDfVdp9IpcupGkud5HqZQnkSwSS2apCTgIuh309vUzNDbJzMh15sIx1DJAnqn5JBOD
      V5iZnSKZ0bh08QNs7gC1/vX3LuWyis0mIEq16NkZEroDMxnF29KCbBgUi0VkWcYwjAf+K5VK
      y9KZmUX0TJzsG98m8M//DaZUuWfr3E/8z/8v7Cc/syy/ruu88cYbeDweXn311Y1dC5RJRBgY
      D3PiyP6NqvKJous6kiTxox++SlOdn3xZYjYSJVjjY09Q5q2xMgGpzIlnD3O99zqCxcXxw/t4
      6603eeHFjzJ84V08u3uY6A3jZQF7eycDg7OEw7P85KEmCo3PER44zaEOP9cLIY512Dl7pg/T
      LHDq2ecpJmf4/g/e48BLn2ZXvYvTZ8/w3DPP8N6771NrN7m+UOSzn/oYigBnTp9FsUgIokhR
      Uwk4FDIlmFqI0FTr5dSp57j43tuEc3mOnPgIH7z+fZo7duLw1pCIzvDsqQefYfAwxkYGsbpr
      UDOLBGqCFHQTQRPwN9ZiYf0bYtTpASK/9VU8n/plPC99dVna+F/+O2w7j+I49lPLrvf19bF3
      714uXry4sX4At7+OE/5V7m3dAqQW57kxvUBzxy7qXDKTCzE62jvwe50EmhrpTFxEl1wU0ilE
      SSJYXw/AM8cOce6Dc4yNzfK5g89ikYdIFCSa/UH8jjDuzg5cwXqsNlCaW7AF69HPXSJVf5Dm
      5hB2WefitQGO7t+DZLOwq94FQNDr5NwHH9Bz6CgBl8nAd99Eudk7Nrc0o4hFTFsIrRjHrQhk
      Z6N0tndQ56uslwm17eBgSxNjI6McP36MucUkAb8fO0WGx6bY1bn+bYmdXbsrPzQEAXhsCsnQ
      EbNhnEc/ec8t32f/Z2K/81WUulaU1krkacMwmJqawuv10tjYWF0NupWJLUyTLlvoaK6/597Y
      wFX8rbvxOzd/CHmAwcFBTNMkFotRV1dHS0sLb7/9Ni0tLYyPj9PQ0EBjYyOyLFNXd/slaupl
      tJlBLG37VixXT0VI/ed/ieer/xG57vay6FsOtKoBVNkUZDIZpqamyOVyGIbB0aNHeeedd8hk
      MlgsFjweD6qqYpomXV1dxONxLBYLO3fu5PTp0zgcDhKJBMFgkK6uLgYHBzlxonIGQTkyRu7P
      /xXur38Twe6hPHaewqv/CbOUqy6FqLI5mJiYYH5+nrq6OiwWC5lMBlEUOXbsGENDQ7S3t5NO
      p2lubmZ6eppIJILVaqWnp4empiYaGhoYHR1FURT6+voYHh5eMgC5rhPXl/89uT/4Cjh8yJ0n
      sL3484i17dUeoMrm4G5xa+aT6NFR5LZjy9Jdv36d0dFR/H4/iqLQ09NDJBKhq6uLkZERLBYL
      k5OT1NbWsnfv3qWyJycnsVsVRscm+MQnPkFfXx9Op7PaA1TZnGi936X0xm8jNe4DQcRITGH7
      7G/Q1rafffuWj/d9vkpox127dgHQ3t6+7L7b7UYQBHZ0dZNMZ4HKTFBPT0/VAKpsPkzTQJ94
      H+cvv4Loa6qcSX31e0ihHljHuYjJZJL+/n68Xi+tra0kk0na2trI5XJPdghkGAai+Giu2g9T
      GVXuz61ZoHQ6jT89RKswz2nhGEePHuXcuXPU1NQQCoXumQV6VJ5oD1B8899D/OHu6AdhmuZS
      hOTNUobji3/8SGVVuZempiampqaYm5sld/1v6fpX/x8N43NMTEwgCAKpVIpUKkUoFNpYA7hy
      6Rx2T5CAy4pT0emdL9PkVXC7HPj9Ac6ceZ9QYxNaIYvTX8/C5DDeulZ2tDejRwdh/vGtLN2O
      rKXnueWZ3ipp76a9vZ262PsIH/9ZBIef9nYLsizT2tpaOQRc0x5raHRYhQHUh5rJ5QqMjg7T
      GPSC4UU2YTGdxu8P0FjrYzaaoj7gIhjwMjmYQ7Z+OOP2r5fF8BymxUXQXwnNUSzmEAQbVmvl
      i5JOp7FYLCgSzIYTWMUyssNHjc9N6czvUT73zXXXPRotkcjr1Llk3HaRqZjGzjordkVgKFzC
      aRUpaSZNfoWybuK1r+/Lewvp+C/geP5X1pXXIZtI8QtYP/N7AEsRHazW25EfMpnMinnXy0MN
      oFwqEGpuxeu0YnG48clWHLKA76Z0CLXuwFcsIgsGiXSeo898hLK+8uHM2xXNFCgsRhDKeUq6
      hFaKEJ1TaWnyY2toZ358mJLsxWuXaGppIb64SGIxTI3v0UMA7gxauTJT4OpcZfdEo1dhfFHF
      bROZSWroBhxstvHKtTTP7XA+sgE8Curr/xqp/dSGHtv60Jpa2ncA4Aw1L7uu3PzfYrViuWmh
      tyKw3HK+O774x+vuDm9RLpeR5Uf7QJ52GZlEjLwmEosMULYHCdUINLe3kZmfQGlox1/XxNDw
      CLXtzUzNLqClI2iyl8cxOxHNlqlxylgkgXhOJ1fSKYgCZcOkVDbprLFwdaZIi18hkddp8ikP
      L/QJoZz4ZQRbYEPrfKKzQPnXf6Mqgh+R4rW/xxj8h1WlXctzPqm0QvensR/4/KrS3sng4CAO
      h4NkMokoiuzbt4/Tp0/T3t7O4uIiTqeTuro6DMNYmvd/HKz6lTY+eAVH/Q4Gr13j5IkjgEF0
      IQySgoGOJFlxW0U00YZo6gQC/qcigl+5nsZtk8gWdX5qn4ehcInemQINXoVMUSevmjy/w8H7
      Y3k+f3jjd22tFaXns0j7/9nDE7K2XupJpl0Pt2aBmpqaiEajZLNZxsfHaW9vR5ZlisUifX19
      uFyup2MAdm89kbF+apuaWJhfoFzOY7VYMIo6kaJIjT1HrKgTTeSpr/UTCDydExxlUQATOmpv
      r4K0KSJa2STokrFbRN4ZzbEzuPGrJPVSnrwuUy7l8ft9d9+khBXrXSNG9ew3KJ/7JqZpcnGq
      wL5GG6NRlfYaCzMJjd0NVmaSGqIAibxOR40FUQBVN/HYKoVZnvklrKd+aYOecmWiU4OIwS4i
      o9fx+9zEyg6UdJiWgwexU1kLdOPGDaanp2lpaUFVVerr61lYWODGjRvs3r0bVVVpaWl5rO1a
      tQEEAgHcHg+SJJFJxZHtNTisCpjgLxVJ51VcFnD7G3Dbn94S3F11VhwWkRuLJcYXVRo8MrmS
      QXe9lUimTJ1HpskrozyFbWSFeIqZcpnoxCQH9lfc+ZnEItmiRo1TYCwu0NVaRzyVwWlTaAyF
      lvKaQNmAH/Zn6W6w8vZIlrJusrvBik0WGImoTCVUxhdVkgWdL2yy3i0Y8DJfLuD2t6FlRsgL
      CpZMlrJpohsGLS0t7NmzZ1mej370owAcPHhw6Vo2m113L7MSqzaAO8Wuzda47J7VZmOlvdhP
      QwTfOh1r5x3XGm6WscbTth6pHfdFzWJ11RALzxPLlGhpqsdnE9CzC5hIzExMMjg9x8lDe5fX
      r0NeNQAYWihhUwSyJYNEXuftkRx7Gqy0CRZM08Rtk0gWdBqUzeO5nlvMUJBExGKcQH0Him4i
      eLqxCgKSJCFJ0qo+39WmWy1VEbyOMraaCFZ6Pouy93PLrm0GvXAnm+qMsJmJYbDWko3PEGrr
      JBlZRLQoBGt9JFJF7LLOQjyLUwFFtpAzBeo9NnKaiMUsEUkV6d7Z/kRF8OtDWTpqLIwtlvDa
      JYIumauzRWQRfA6J8UWNPQ1WTEyOtj5e7+FG8qREcJUKK35akWgcwapR4/ORTc0h6CJ6UePM
      5SgBtw23w4LLBrFwhELJQnuLh9GFEvlkgoY6P07rk9cAybzODaNEnUdmf6ON6YTG8TY7mZJB
      /3yRGpdEpqTje4qOnYdRUksIuoFksy9FtiiVSss8n+rZbzD26v+LVRaZT2k0+eXoWa4AACAA
      SURBVBTCmTJ7QzYS+TLjMY0Gj4wogMcuLXlz7V/4Y+SW40/pybYOKxiASc/+SsjpSndqgFn5
      69Q2lIkns7gsgNWFIMh43B7i6Tw76q3kAn5ko4DsePIC7NlOB4IATotI2QDDgJm0htch8ePd
      LiRBoFQ2sMhPKWbKKojMz5ApQdBjJV+WEbQs2aKKpNhxO21LItimiEzFVUYiKrIkYJEFJuMq
      M0mNOpfMULiEKEAkU37q3tytxgoGIGCzrbyWxwq4XK7bF7yVn93eypReZWR2e/rzSYrgu0eB
      Neso43G041GQrQ4c5RyLiRSaISFqOayeWlwOC6XS7RBVbw1nOdBko9mvMLZYud4TstLsUzg/
      WcBjEzFMNoU3d6vxRAeMpbf+w2MRwepjELB3l7GSMNxoQg2hh6YRPE387Gd/4r73d9yeIVwm
      ggXr4xOKH2bWZACjA1fxuBwkxQB2QSPgspAuGohaDofHj2KxUFINjHIRv3/9nuDBcIn5pEam
      ZPD8DgeCIPCPfRmafQpOq8jYovrI3lypeWuMj6si+Mmypk/L6QuSWxwnJYrMJRYoN4UwMLEq
      CpGxq5i+ZiLRHAd6djxSo4YWSqi6QalsMhxR2d9oo8YpYVMExhZVdjdYn5o391HRilk00Y5o
      aPcdat5J4f1vcPE7v01X0MJsUsMii9hkgZBX5vJ0kd0NVhJ5HZ9DwjTB1XEC95f+5Mk/yIeE
      NRlAIBAAr4uasknS56CcDpPU7bjEPC3dx4lF5tjb3YHLYX14YQ/gswc9ZIo6C+kytS6ZrGpQ
      45TorLXgc0g0+ZSn5s19VNKJDIvFKFZBRyuWCdTVMR+JEfTYyJdF/B4noBKO5One1b7k/EoV
      DBIFgzqXwOiiRsgrUzZMhsIlDLMigJMFnY/t2HqfydNkTQZQmZ6zYoXKuatNy32rjtb25b8/
      ggh2A43c7tZveXbb1lHWZhsaeB0K87NRZiYmqC0exChlsAkaRV0mtTiHxangdXYAlS/2REwl
      ma/ssciWBLJFnXhOJ68aCALMJDR2BK04LSKqbrJ1vR4bz4fGE/wg7+xmnQUCyKXizMUyNAQD
      K3o41+oJlup2Y3vx1x6atuoJrrDmll69fAHR5kXUczR3dJNcjBIMBlhMZPHYKsuhs+kE7W1t
      DxTBumHyxlAWj12ioBq8uMvFxakCigTxnE5bwML7Y/kPhTf3QTi9Abq8998EUhXBT5Z1fVoW
      i4JNCTA/eAVHczOX+2do8CnESreXQz8MEwg4ZeyKgMdWWbSVyOsk8zqyBKVIaUt4c++LWSad
      VbFapGWe3TtRS6WbCwwNSiUdq/X2/P0tj3DxzDeYee13qXXKDEdKNPkUrLKAwyJyZbpAo09h
      8civsffFL6DreiXaWdUIVs2aP6maQACbtxaXQ4H6OsILEXY0u9BMy5qWQwtUeoGgS2EwXGIm
      ofFsp4PphIbPLqEbFZf+Zvfm3o/Y/AKLqomkZpFsXkQtR14tEwjUkE6l8fndTM9Gaa7zgtXK
      zI0pWjraiSUz1HltTC4kOHygh4JqEM2UGVwoEXBWPo9E3qSz1sLAQgm3TWRiNkLsnXeQZZmP
      f/zjT/vRH4DByMAANcF6NMlCIRW/J4rbRrNmA2hq61z2e2vb/WPGP0wEv3Tz/ztLvDvQ91bt
      1qOJGMmMRnNbExICKG4sDpPE3A0Gphbp2tWNKApMjI2g27xYTZibmWBoeJaDRyv3ADTD5Ppc
      ifYahdGIigAspMv4HRLNfoXL00XsrSamaeJ0OlFVFYtlc04Pm9kw9tAuwiNXoKGBxZnZp24A
      m1YE3xK1m0XAPi1DXI0Itr7wq0h1uzeFsH1gWr3Etb5BfK4AhkUjr1rZ01k5xHrLiOBbzM/P
      UCjouB0yDl8d8fAcqlbAHQghYyztCTbnLvJqf5aT7Xb+sS/Dp/Z7MAyT14eyBF3ythG762Ut
      InjTI1nZf+DgskumaWIYBvl8flVFrDbdalm3AWSSMWRnPalshuj0GZxtR5CEOFoxS14rL+0J
      FgSB9hoLAafM3kYbPrvEW8NZcqqJnNcplbe42F0H8egCBV2iNuDBallZIBeLRWw2G/nTv8eV
      l3+HPQ1WMkWD+t2nCB/7P3G5XMzNzdHV1YUoimiaht1u3+AneXSEmzvCHA7H0pv9zmh4K0XG
      Wyndg/I9KN26DaBtx270sk4ureNoPkU8PEewoQFBANO4PaoyTJN4rsxcUmRnrYVkQefFXa6l
      CA1bXeyuh3g8TlYTyCcjWFwBzGIal8fDfDRFY6ieeCqDIpq0t7UxHtMYW1QJumRSBZ16oL+/
      H4vFQiQSYWRkhGKxyJe+9KWn/ViPDVEUUQs5YukCDfW1D0wHJnPTk3iDTThtyrJ7yXgctz+A
      dJcBiaJIKhGjoJnrNwCrxQoWlmI1Otvu9dHeEsH3Hl9273Lm7YZaKlFfWw+mQTiVQS+myWi2
      e/YEa7qJblR8I33zRVr26qiyiizLNDc3Y5omoiiSSCQqS1U+JAiiQCmXJJlx4Xfff81UZGqA
      8bCJLzfB3t1dy+7ZFOjrG2BX9y5syvLRxcz0NJ6a+qe7HHq7Rlne2d2z7PdQqAnUDHW4cVvg
      4JFDS/f2dney5zMfA+AQIAa7+ZkXf2bFch9ntISnjZpJo5oV/8iD3pZ1oTbGomP43Pdqx8Vo
      DI/NYDFXptm33AAaG0PMRlOrN4BEdJ6FWAarRcLm9GIVNGxON9FonNq6GuLxFF67vCww1ltn
      LpKfvMAnetxcni6QLRkspDW6663Eczpz8W/y9a9/fUtOcz52LO4V/84fKhG8BiwOO1Iqh93x
      kCldScEhG8hW5z23ausbGBwaIuDKUtnOtRxVU1l13IxisURrWxuCqGCWS4yMjBCZGkawygyM
      zgMmyVSSG2NjpDNpALrqKrF4oBKw6kCTDY9NYjKuIcBjD3W92dBLJXQqgvYWpVJphZQGpZK2
      7MqtdLOv/T/84Jc7OPerO/mnX+mkdOYbjI+PE41G6e3tJZ/PUywWH3vU5KeLTiQSY35uDk3T
      Hphy6MYkNqeT+tq7Ao1peS5fuUpKFWltWL5fsJTPkitquBxrOCMs1NzK1OQ0DaEQIiZWWUC2
      OrA7nQQ8OhZZoJBVcNzhCTaBl7pdJAs6qm4SzZapc8vsDFrQdBPPpz/9yFsmNzOFeITRdB5F
      LdLS0UEmnWc+HKEtVIMuWcjE07jdFsQHeIKDLhmfXaKrzsr1mxGeP+wiGEzC0QQ7dnbhesiq
      gqDfi1o2yOaLuBx3aAXFwannnmMxskBJ07HeoQGsDhfNDhfJZHINGkAQaW2/LXSt9beDY1mV
      ivq2Wpef3LHj63+29AV/vAHttgoyO7u7iU2OMzwwTLDWhyiKDA9cxx5sot5Xz9TYtQd6gg2z
      MpOWLRp47RLJdBZV/bCLYJkjx4+uKmWg9sGnxdTW3T8cms/nu78nWC2VkEUTTbQtxau8O2QH
      gFYqIVmty8ZSt9Jd+d0vEx89x/E2B6puki7oiAK4Pv9NhPr9FAqFynH1D1juvFm8uI9Uhl5i
      Lpalse5BW/dX5m5P8IP2Mm96T/AD2HSe4PmZSbKJBaTQQRrdArl0gkSuEv/TaveiGgZ6IYVg
      KmTKZUJBP7mijljOk9MEund2sKPWQma88uW+PldEN0xiOZ36sQX0BYPR0VG+9rWvffhFsGSl
      sW59u+Sk5uPIvhakYDeCzfOYG7Z5WO1Q+HEPme8rgq0ON10drThkkxvTYVKpNIJQ5srFXuZm
      w9Q2+BnsH2BuIYZRyjA2Mc31gVFS6RSCUCl2MVc5nCGZ14llywyFS2SKBtF4Ck3T8PufTgTp
      p4NKJqMuu5LJPly4Ri/8HT/4jS9SCg9y7tw5AK5evUoul+PMmTPkcjnC4TDxePyJtHqjWO2E
      yIadEdZwMyhTbSaBp7VpaZ51z67bEXw/+dMPDitS374PPJU33yd33b5ufeEjSHW7193orYlK
      Ngu5fBxMgXQiii5IOFw+yrkEomIhmythtVixyCai00drQxCvXSJdNOgfGCRrqZzS09DQQC6X
      w+PxkMvleOWVV/ja176GXj2aas08dOzhcPvXvcfU+uKvfqhnedaGRHhuFKfXRqkMVkHA4fIh
      oeOqrUfQC2RzJbw+O6mshpnJQkOQWLaMQxEolU3CicqbfmRkBEVRmJmZQdd1Tp06RTQa/RCJ
      4I1jbcuh9RIlU8bQdOyr2PQS/fbPMXb1DD0hG+cn8gScEhlXF51f/UPsdvv2EcGPgDp5FnPu
      EkrPZxG9TQ9MuxmE7Vbbv7G2lhbinOlf5MjuVmYWFnApJiVTATWDze7A5vaRyRSQBJPGUD3v
      juYI3TSvQy12hsIlBiMaoUKB4eHh7SOCHwHB04QoStVIb0+INZ+gUBPwMzM1yaWr10G2YJUF
      0ukMudQiA/19TM8lqG+o7OuqcUoMhUskCzoDC0W66iw0ueH69evbUAQDmIyPDDG7sPjQlLfW
      va8kgnt7exkaGuLtt9/m0qVLHwoR/LRY26vXFWL/ToBmevYduH3Z5cLtdnN3PLjjRw5zvL0S
      QPfWDPiPB7uxvfh0Y3I+LYzMAkptJ2Junqu9fVhllcWCRI3dxGm3EkmrBGtr6B8e51BPFw6H
      Y0URbBgGuVyO1tZWVFWtiuBH4LGMPe7nmKiK4OWIzlrS/cPYPX7amxtYzCRo8btx2mTIx2nv
      bCc6HyNYc7tnXEkEZ7NZ3G43mqZRX19fFcGPwLr2BJfyGabDSXZ0tPCgLSzRP/vnlBtPEHrp
      VxgdHSUQCDA3N0d7ezuqqlZF8CrYyiI4FVugv68f3eplb08Pfvd9dqyVs7zzXi/eYC0H93ZD
      McFrZ/tw2W0cO3GM++2TmrzWT83+Hlwr3Eul0ni9D3ccrusvGk/lCDnKDE8uYJd1wlNThFpa
      KGoGHqsAVjd1NT6KZZNYukyIygIuu91ObW0tr732Gl6vtyqCV4HgacLS9szTbsa68NY00FF7
      g0LjUXwOlfMfnMXuC1JvF5mIJbDbvezbvYPM3Ci+HQc50HLzq1xMIribONxc4tyVIeyySW0w
      SG5xinRR4OjRgwz0XmDk6hgf3dPKdERDKiYJdLQyePECDl8N5947w8GTp/BaDSLxFD0Hj+NY
      4diE9R0jWC6xUFAQMnNcHxjH43VRNkRcNoWJsRFujE8DkC4aXB2eIplMomkaqqoyOjqKw+HY
      piJ4OZH5GaZmwyvcub08OnHp77l+/ToTExNLIvjy5csMDAzw1ltvMTExsSVEcN+FC3QeOk4p
      Ms/U9AJdh44Qj84CoPjb0MKDvPz9VzFuph8b6uP8cIT9jTLjsRIt7hKRkoeD7S7efeMNSq5O
      une0QTnLzHyS+fEJJgYu4mo/xK6dO9nR1cX+PTuJRiPohoAsrjzQWderN9Rya1VoM7v2Lb/X
      cMfZth279rOroQfF5+Pzn//8eqr6UKOqJZAVFsILYBYJhzVkI4Yq2dE0mRNH9+K2iUQFgVgs
      trQ2vrm5mXg8TiwWw+fz8cYbb2x6EdzYWMflcx+gFTRanCZXL1+kVK6MbQqFAgYsGwl0du/l
      +aMdkBynvq4ebB7y4WucT0JH926u9F6CRJLGE7tZmLxEKb7Ii0d+nN5L5zE725AocW1glIA/
      wMLMBCNzKfa23HvC/BONC6Tr+oafE7yZy7ib8OwU6RLoxSQWpx2vq5lY5Aayw42aL7F7zy7m
      X/tt3ks00dPTw8zMDCdPnuT06dN0dHQQjUax2+243W5qamoIBAKbSgPcj/7TZ2l87hnu/Tpu
      POs2gMj8DHZvEPcDzgK4UwSfPXuWmpoacrkcHR0d6LpeFcGrQJ08u2oNsNlE8FZg3S2dm5uj
      zaKQ1B03vb8GpWySQl7D1RCitb52mQg+evQoV69eZWRkhIWFBaxWa1UErwLB8+CZnyqPxvpE
      MOD1uIkuzN72/gY9DAz2ky+Y3OpS7hTBfX197Nq1C8MwKBQKHzoRPNx/jfBijEzmduSy7EP3
      6erL0q/ELRFsmuaSCL5w4QLj4+O8/fbbjI6ObgkRvFlZ96u3o2vPPdd+6qeXRy+4UwQfOlQJ
      9fGVr3xlvVVuarLZDIorw8yNMRwuL3U1HhYLWbSZeWQtTdnmw8xlcTjtDAxP0NERwltbR3hi
      GpfXj1WpLIHOzN9A9NSgZuHgwa4lETw0NEQ2mwUglUqxsLBAPp9H13UmJiY2vQjerKy7B1gN
      1hd/9akfRbpRWCxWJEmmfWc3dqnM5NQcVosFQRSRLA7sikhjayeyYLCjq5OA3082k6V9Zze1
      PgUVhUImi2JzYZUrMz0AyYJOf3//so0vtbW1hEIhXC4Xdrt9yRNcZe2sSgSXSipW6/LlzyW1
      dN+4lrcIv/qb5Lu/TEdHB8PDw4RCIWZnZ6mpqUGSpKoIXgVVEfxkWVVL4/E4oVADyWQSDI1w
      JInTY8NhdxGdn8XrryWeytAQqqeUz+F0OvF4PAxHdWTvAh0dHVy5coXr16+TTCZ55plnCIfD
      VRG8Cqoi+MmySrMucWNimkx8AfQyOILoiTg6Ah5/iPDcKKIgEonJaJkMxZrKKZK6miMVi5FM
      Junq6loaww4MDOB2uz9UIngtZLJpNFVfiqD9IBKX/p5I/Ut4PB6mpqZ4/vnnuXr1Kjt27ODa
      tWs0NjZitVpRFKVycueHgNUejPg4ylmVASx5fttXju4TCq0c7uOZE8ex7f80AIcPH15NVduC
      axfOsf+Z53jtB9+nrecg+WyWgMtCThPxeexLXuE7RXB9fT3hcGXZRENDpTceHh5GURR6e3s/
      VCK4nJxZ9cmYD2Kl0Op380THHkrPZ59k8VuWXXv3kpibpr6xERWF5lAdicUwouwkGYtgcdqX
      i+C5fhYWFrDZbCSTyaU9wU1NTaiquqmXQ89OjRPLqBzY273seiy2yOLCHJ5gM4XoFNZgE4vz
      YXoO7MNMz6Ke/caa6umdKVA2oKAZ1Lsr0fR6ZwvUuWUWszrNfgWnRcQwTYbCKq1+hXRRv9cA
      UvEoyYJOQ23gDuF77ymGd7NS0KzFf/q/l0TwreXQU1NTdHV1USqVViWCP4zUBkMQDC275nK5
      VjxNsqbrGb54lwh+7rnnVix3M0aHVlUVQRQYvN6LIcjkVB2vTaQsini89WSjE0xOzGPT7RwJ
      eUmpsJ6BnNcuYZEEItkyulHxRelG5eTRnGrQFlCYTZZxWUXSBZ2+oo7dIt5rAPF4nHhWQ88n
      weIi4HUBKmPDt2NXBlwKmZKJUzERZQuxdBHFLCDZvHS03g6ZeKcIvhXPMh6PMzQ0RF1dXVUE
      38H9jlKVmo9vcEseL7X1jXS43WQzGXStSCSZxyEbmIoTPZ+gtmU3ba2dFAWJ8dkIPXXw4HC4
      KzOb1PA7JDJFA9MqkisZWGWBJp+CJVPmRlQlkddp9CrUeWS6660Mh0srD4HKaglLfS0SJjMT
      Y5gWBe6IXXnyIydxWE0Grp6ntnkHU+Oz7D+6HwVhaS+rw+FYJoI1TcNms9HQ0IBpmh86T/Da
      Uem/NkJDWzsBj/OOM4OXk0gkuHLlCi+88AITExMkk0l27drF/Pw8fr8fVVVpadm8kVdv7RZ0
      ud2Am+Vngt+K6+nAAuztrqQVg7uxf2FtZ0d8bIVruw0dUbx3Meat0xlaecKrQYvX/h7bI8a2
      3yxz+I9/fjvLufdH8ddYGRqfp63Bi9vjJ5XKUVvnYnQqzgunjqJpGt/73vf41Kc+xcWLF0mn
      09TW1mKaJu+//z6/+Iu/iM1mW3MbN0Pa+6Elpqsi+MOPxI7ubkQjSSar4g/60VXoaG0kkkvf
      HHrC4uIiDoeDcDiMxWJBURRUVSWTyfCJT3yCyclJuru7H1LX0+P+IjhGdHGR3d07uHrpGoG6
      IKlUll09ux8ogk3T5J3RHPsbbbx7I88LXU7C6TKlsoFaNgk4ZW5EVTprFercMkPhEl67xFRc
      o8mn4HdI1Htuf+0faAC3TjNsagjeN82t0wxXIp1Ok0wm6ejooK+vj/r6em7cuEF3d/fSorjt
      KIIr2Kmpqfzvv0sQe2puTyvX1dXxkz/5kwC0rXAO22bn/iLYht/jBaOMKFvQtDLlzCJp9cHn
      xwmCQJ1bIeCUafUr+OwSV6YLaLpJsWxSKps0emWyJYMdQQmnVaKgmQTdEgtpDVU31mAAN08z
      tAkaqmAlG5vDG6hjMRqlrqmRTKaAaGp4vT7QC4STZeprKs33+XwMDg4C0NHRgWEYDA8PY5om
      58+fR5blqgjeBjxIBGcSYQQBFKuE2+1B1ZuosYL6gPIM02QmoeK1iYS8MsORErvqrMwkNdrs
      ErppkioY+OwSN6IlpuIqXXVWFrNl2gIWxLvetQ/95qmlEqND/YjeJlrqalkMz1LKFZiahemp
      BQ7t3cnE2AgWxcTTsJ+p8X4kmwefz4dhGCQSCZLJJJlMhkQigaIo5PN5HA7HthDBqXiU+XCM
      jl27l85ZuJtkMonPt/L+qGw2y7lz53jppZe4ceMGyWQSSZLwer24XK6tLYJDFRHc0FA5xKK2
      tnLzYSL4MytcuzsmFYBh6OxbQQTfyZpFsFbMcWNijp3dXfcNV3GL6pbIyhg4GY+juDyMT0fo
      aq7BVGyo2RxOl53r14fZsW83XrsNTIFUPILVU4tNFmloqOfSpUvU19cjSRKKovDBBx+gKAot
      LS28+uqrVRH8AFYjgp/oLJCmaQ9twMNYzUNsdBlrMerowiyxeBzJ5gZBpMbjxERjbjqCqasY
      goCzrgmLliFTglAwQD6TJJnX2d+zi5mZGS5dusQzzzxDLBZjdnYWv9+PaZo4nU5EUVwSwZvh
      S3132od6gmvqiEcXCQUDzCQL7N29A33yLKW//+/vKTtT1BkKl/DdnO8/3GKnd6aAbkIkU6bZ
      pxBOlznZYWcxqzMeUznQaGMwXKKomewJWWn0LnfmPlED2Ixf3qdZxm1MJsfGCLV2YJEfXOZa
      etHNaADjo0OYigtJz5EraORUHZ9domQKuGwujEIUKbCDUipKjduGEmzBNreyAQAMLJTIlnTs
      isjekJWRiEqdRyavGowtqtS7ZeyKSMAp8cF4nrxmkCsZPL/TSTyns69x+YTNE1Wfj+ML82Eq
      4zYCbZ0rjVrvxTTNVS9y22xpJUmisaUdq9WKWiohmOUlEazLDsxiBk/LYeILM9S3NbMQidOu
      3F8EJws6i9kye0NWwpkyIxGVvGYQSZcpaAYHmmxMxDTAIJ6DJr/CrjormaLOVEKjLXDvUp4n
      2gNkElHGpsL4XDLexp1MDvdz8OCBh+YLz02TLhpQSuPw+0jGyniUNI6Wg9TcJ7re3UTnxyiq
      VuLJRdweHw6Xl/DcJAcPHlx1+2cnxxDsXnKxuf+/vXP5bRu74vBHiqSo91uyHcm2nNhJ7XbS
      Ng3SAE3QoptBgc6+m/5F/U+66GKAAm1RoA9MXaSYTiaZTBy/LcsPyZYsiRRJUSLZhTMJnFiJ
      49jpeMxvJQHnUofCvTz8kefcc8SP0szJj/G+vEvkuWi2wzgL7Qgni1znGgHa3R7TowlWDZHe
      8iMcOXGicWoojKiK9IwAbl/DMARURUM6abavY7GwvIpoqcz9/McsPVxFFnro1rulC7fbbUQb
      orHUET8+JO8ymS6a7TDcvQV6//zdex/H8zzss6gHOC2FTILFSp2JsTx6UCQfOtnlu3XQhGAM
      oW8SSRe4Kjv0hTjhtzelOSSgcu/efVpNi53FNcrTE3iWzvXrb+4p+5r/IyPofQHX1o748SFx
      zQO+WKiQkFRIBRnNl4goL6+OG6tLWKaBbkNYVbFNjVD2CtLApDw1dWTzYq1ZZ2lzH1XoEYxG
      aezskyxNHmu7tryAEs3QrlcJRqN0DnRCooSUi73wYfHpYyxXRnLMoTZry8/Y7/SYu1ai54DR
      GxALQrV+wMDQiGfyaB2dQjLExtYec7dvI/U0nOp/XvsvHqwblLMK/1jqcn86gmm7LNR6BCWR
      ru1QTMqsNfr88nqEPz/Vmcwo7LT7KAGBru3xyUcxxFcWxPmmQoRiLxKc3qW368TU9PNPz5sc
      nyxwvIJCMq2QTM89//7uHVYy+dHnfQ3ex4/3w+33yI1dQd+soDUHTF45emsgSRLF0TyNvkxt
      fYNyMcN6s01UVV7buXtzaxvLHJAZyeD2NaKROJ328baGYXCgD8gkk7h9jWRujO7OGu2m+MIH
      UQyAC5H4cBuAZDLBdm0fQRBwgZ4RIB6RGSg5PNcjl0mCNyAoeQwGwydlOavgeRBXRdb3bUop
      mY7p8lFRYX7V5kfFEIXYYd5/JhKgZThMpBVsxyPlengevHqi56oBfM6G7a0quWwOQRaxbQir
      L8Xc+sozQokCTk9nZGyU7e06+Wwa13FQQuHX3nxaloWhtVDjWSz9gGg0fqyt1e3QNh1kr4ca
      z9Jp1EilswSUlz5orQamE0ByraE239SJDBXBqTTr6xvk8gXaHZ3JiSL9IY9BH22ZyAEBe+CR
      DAcIySJbrT5jCRnb8UiGRKJBkaW6jW67XMspfFm1mB0J0jAcZo7p1ewvAJ9vHd8ZEXwe/Ouv
      f2R0fBwxM8NE+nhR0Nx4TEMsUi6ljpzgsydfU56bZWH+L6jjd5i58ub7+c1qhVJxnEajwfz8
      PAB3794lkzm+BtrnbPjOiODzQFATrHw5z16wzn9dC0UeILoSmqkRTyTZXXxIemQKO9LFarhU
      a22ePH7K1RtzGO02E3OzPFuvIjcEvvpsmYEVoSvGyEUEosUJEhLUN9fpI9Hsdvntb8Zf/PZl
      m/yGYVCtVoHDjbpO06X9rSI4m2Fva5/ytUlWFpe4+dO7iMeIYM1y+KJqEZIFREHg1niIB+sG
      kxmFJ9sWgnD4nuDj2Ri7nQGfV0wiQZGIIqJIAnhwp/y6/xduARRLEwxSIa7ISdqazlg+heQJ
      OIKL4Niko2EikQRCOI3d3eH6je+RisbJ5vNs7TaQXIs7P/sVrmsSCIwjj0LwjgAAAqNJREFU
      2DJt3eTAsBhNBun0BOZ+eAuA2v7L3dZmZmYu7OT/9A+/5we372Ee1BFNHfXqLAPdIIhNoTTJ
      3/70KT0hhOKZTM/9hHQyTDyewHzezvabAv3T8iYR7Jpd1LBMSzOJhVX6DhxXHBpTA+SiEqIA
      j7Ysbo2HKGcVXBcS4QB6z0UUBPZ0h6AkEAmKTOcUHlYtprIKs6PHl5z6GuASsLb4FUsraxit
      Jl0njhCRyGcySN0637//CY8e/B08FzkYYjwV5FGtz69/cZh7tLi4yM2bN0919QfeLoKzBXY3
      K+QKOXb3WpSHiOCW6fB4y6KcUTD6LnhgDVwkUaBru9woBFms28RUkbAsYvRdAgJkIhILtR6j
      CenYW2Z/AVwC1paekiiUaG5XiCVzhMIyW7tNQgGX4tQ1OvUtVrabXL2SoaVrmIMQczPjGIaB
      aZofPPINBoMzKZL6v2eD+vichrN6CnSS4/gLwOdSc+FEsM/lYLuyRiCSwjY04uEAjpIlHXt7
      LkxzbwtRzdHZ3yCSymBofcIBEyU7yXHDz7U/gI/PaXFEGdvQ2N3ZpdOq09HfVCn8knQugan3
      EOUQhlZjZ7dJq77JsOF+BPD5VtI3NaRwmlIhiUmAkHIyTVDbrrHfCqAKGuF0kkLShUCWYcN9
      DeBzqfFvgXwuNf4C8LnU+BrA58KxV1mhG0wR6OuUiuND7aqbFSLRVzoRWQdUNJmk26ZqeL4G
      8Ll4fP3Zv9kJylBbhmCGvqQyUwjz+ZN1VDVIabzEk6UqV8cSRMIqS0tr5HIpXKeLYzkEJ+8i
      tlaxBwM/AvhcPCLxOBNRiY12AjxADjFVGqXePsw72m0ajGSSxOMxBj0dV5BQwzFSsRSVzT3i
      EQVt30T3I4DPZccXwT6XGn8B+Fxq/gcaHSch+XetCgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='29' name='Month' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAAdCAYAAAD8fGP2AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEIklEQVR4nO3cTWgcZRzH8e/MTvZtmhxKgkZjstGUWBpiY9qmmmJzMBpb7QqiFGp68KWC
      koKFCLWgIEroqQdR8FKkEURpySHQShtrqrRN0vjSdnswhmY3lKaHrkU3+5Z9dsfDrs02EWvc
      yc6GeT6wsDPPszv/Z9jfzPPMYRXDMAwkyaZUqwuQJCvJAEi2JgMg2ZoMgGRrMgCSrckASLYm
      AyDZmgyAZGsyAJKtyQBItiYDINmaDIBkazIAkq0VFIDM6ItEjg+bVEqpCpLsbyJyKP91APEf
      PhOfLFKJppofb/xK9I4W48re7Pj7D5OxqDqzaVYXsFJozwXwNFhdRfFojX5E6AKs68jtEaRD
      V3G2+pkLWVmZueQUSPpnDZ1o0+fz7nQ/I2bacdxnYU3LwLw7QPQk8aMfIX4PAx6Umtfx+Pfg
      cGanStFrm3E6hkmFpjDURpz+I7hqddMOb40/EN+9QeJSACPjQanvxbvjJdTcZcWY+IDoyQEy
      SQ2l8X28Xc/ebit56ka0e/pIz+xHqwZmzpGufgw3p/I63SR1Yg/JyQkMAXgex+k/hKtah8kD
      RM4/hP7MKhIDfRjNA+htPmvG8i9MnALdj3PbIJ6qCsiEmRvYSuLiNvSNNdnmlBet8ytcFQ7S
      p3cQC1zAVdth3uGXmRhsIvL3RuU+9O5X4Jd9JNM96D3tKIRJffMC8XPN6FvcuX4v4+16DyU+
      RLy/l0RgM97mSquGsEQ6Wn0NsekgrmofmekR1PrX4I4AgNp0EL1zDYomMC7uZfb0Mcp27c5O
      LZKnSHzbjHPnCFq5y4pB3JV5AXAIxNldxENTGLkVklqTt1SsWIujwguAoldAwrQjF8XiNUCU
      1NQomeAos5fzdjfeAHwAKKsfRFEB/Ulcj/iIXgtAc0exSi6YUtsOQ2MYbasQoSq053WYzu9R
      Btc/ITZ4hkwyld1VuWG+ee4Byvz70dzFrHppCgpAZvY6qNmvEGffJKW9i/et7agaiONNJE0p
      sbQ5tg7hffTeBXuDi/oZqdjtc7VirG5D+/MzRMRLmi24nQvapz8l/qMTV/cIZeWu3LQnr738
      YRwl/OOH/7EINqLh7JtbR0n9GkOra8lup2LgrUbVBEb4DCJsZpmlSMdR10p67CCpW7moJ35D
      hILzXUQSEBg3jpAMzKI1tFhRaAHW4ai/hPjhezJ1m1AWNosEhrMS1eOCuauI4IQVRRZkyZck
      Y6KX2eEx0GrRNn2Oe212IatteBv161eJXPagNvTg8Jpea8lR1/fhvvkOyS9aSQjAsx7tiQ+z
      J9XTgvHTU0ROhLPnqv0wnoaVt+jX1jxN4tgwZTt9ixt9u3GVdxP7+EuUqi6cNVVFr69Qivxb
      FMnOVspDOUlaFjIAkq3JAEi2JgMg2dpdnwKNj48Xow5JssRffkxBH7a3onYAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='71' name='Quantity' width='192'>
      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
      g++/4gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='70' name='Revenue' width='184'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Revenue by Market' width='192'>
      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
      5uah3knnvns4UDbJmTGB6vaxfc9WypVl+sevJdIJs1DqxFPWwIG7dmF7y7iVQ5XprC10fX52
      Mc7YUo6tNQ6EgGjaQAgodyuUuxX2fLaWxb13cezYMbZt28b27dt59dVXUVWVmpqatTwNFkXM
      mg+DVnfspzw5zOhcnJyWIZsXqO+x5IqeinLixWd57vgblNW34NOj/OyZZ7gwNIMJqE7X2y5+
      gIBLRpHgPxwrrO7ud8qcHk8DghcHUxzt8KDIEhens/yHYwv8tx//kubmZgDsdjvpdJqKioqi
      GZO2uP2sXSBMCEwhCtWThYmgsDqMKQqVH2QZBDIyJqaQmBnvRXe3UV/pQlXkQpEsUyBLMooi
      I4QoVIx4C8lT30F//dvkDYEiS6hyoVKEIhfWC1CkQuanEIKcIXB+4j/i3vbgyr4Mw0CWC/uW
      JOld+/+gWIGwG6OYNK1dF0iSkN9MMZbkQpqELPPWNdQL78rIEtQ2bQdZRbm6JKSkqNiVt+7u
      3YkWcrANx/ZP8tZTaXvHv2993V6x6W0XuZX/Y2GlQqwiVgtwYxSTJisVwmJDU9J9AH3kJYyh
      XwBgv+ePUYLvLp9oYfGruI0tgEk2nSKRSJDO5liNfpcZmyQz+ALRS8cwM7GV10XeK7EAABS3
      SURBVIUQxONxFhcXyefzK39Ho1FM00TTNBKJRKFa9dX38nlrMeyNyG1sAZK89suXMT0OUimN
      ux/+JDXuaw+22ViMOFAdCNzwHg0Tfty9zExM50u/blB99fWlpSW+/e1v43a7aWho4J577uH7
      3/8+uq7zqU99ilgsxvPPP8/XvvY1UqkUf/RHf8Tv//7vc+edd67uIVsUPbe1CxRo3EZXVwfp
      UDd9szEW5roJJSR237mX8InjXI5naN9xkC0BmAxNEDECHDm0h8Xhc1waj9K4fR87mq6VMVRk
      +Fdd5Ry78vbyFLFYjF27dvHII4/w05/+lP7+fn77t3+biooKnn/+eerq6qipqWFpaYmxsTG2
      b99ujQhtUG7rQ3A8PMQrL7/M8QvzNNV6Ct2g/CJnzoVo2baLvV1d7OuoZ358DN/mPbRIGebz
      OYQAiRwXT/WQuoHvqampIRQK8fWvf53KykpUVcXlcmG329H1QmWhgwcP0tPTQzgcprW1dS0P
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue by Year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales Quantity by Market' width='192'>
      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
    </thumbnail>
    <thumbnail height='179' name='Top 5 Customers' width='192'>
      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
    </thumbnail>
    <thumbnail height='179' name='Top 5 Products' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACzCAYAAADfahNoAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAOn0lEQVR4nO3df1SU9YLH8fd1RAa7lCAQaJmYtIKpUBdMF692boeiW8mpe8PrZlJsjZr0
      41bnlu3Ro+fq7rntlt1KHY1CzXto11zYLXVN03siPUIqpvmzxEiD+JlOwAA9un8w6IgT6Ili
      mO/ndU7n1DzzzHyffD7Od+D5PN9fnD179iwihurT0wMQ6UkKgBhNARCjKQBiNAVAjKYAiNEU
      ADGaAiBGUwDEaAqAGE0BEKMpAGI0BUCMpgCI0RQAMZoCIEZTAMRoCoAYTQEQoykAYjQFQIym
      AIjRFAAxmgIgRlMAxGgKgBhNARCjGR+AxsbGnh6C33O5XD09hJ+M8QEQsykAYrS+PT0Af+B6
      +caeHoLfC9RJkD4BxGgKgBjtMqdAlWxYMI+Ck57/7BfK0NSHeTwzgSu6YTCVG3LZk5RNejRA
      A58XLuW1/ztKky2C0fc9xoxJg7B13GfTIha8+z13z5/r2Q+smh3kvfw3imssQq6dyKNPZZLQ
      HQOUgHP5nwCDM5jvdOJ0Olny4tNMqF3Jio9OdfvA3KX5rDp5C3NecbJk4XRitjt5r7zDkxp2
      sPaT0dx5s/eDlWxavpWw6QtZ4nyFOZNqWblyJ+5uH6EEgh81BbLZY0j9p3S+P1LWXePxcLOn
      qIaJU1KJCgLblTcwOSOOvZ94v08Du9Z8zNCsdK7x/lgo207JkAwm33AlNoKISp1CmquEPUqA
      +NCtPwUqzc2FrHS+XfY67346jGxnNokNn7Mh7y3Wf1pDS78IRt/5EFnpw9umTN7bbCGE9ovi
      N0kA3/ItcYwIP//atn+IJ7qoDotYbIB1qJDNEffxzCAb+7wHcaqe8OuHeU2Vwokf2ZfddcCg
      7jxaCQQ/KgCWu4IdazbQ/+b5nke+Y9fqNdhSnuClx6IIwk1p/irKxszmxRkxBLVWsOPNpeSX
      ziE7EXauXEHZmCd5cUYMdtwcK1zFYQBaaO4TQoj3m9ls2CorqAairTIKN9q5Pyf2ou8Ezc3N
      hITYL3isj62Kb6pQAOQilx+AkwXMcxQAYAuJYuTtj5A1tv2EO8WVqU/z++Ht3ziPUnoyhYzs
      GOwAthhSM1L4cNNRSLTY3/d+HKkxnpPYTv+Q9tO5H8Fnmmjyfl/LwoqOIhKo3FSI+44cYjue
      /UBwcDBNTW7gfAjOWFFcHXXZRyoGuPwADM5g/tx0on1vJG74Jf64xbKwbLaL/gZvM4ABHOVY
      HcR6pkHW4YNURvwjNvax8X8PssOaxd+9dyl2UJIxn7kjwqjbfwxrXILntes4+Nn3DLztEo9P
      jPIT/x4gjsTBxRQUVeC22qZMRQXFDE6MA9tgrv1mPeuOnMYCWhtOcPiLes9+dpJSI/h7fhFV
      rWCdPkJhwVHG/CoWGEXWkrafQrX/MzNlMBnzncxNj4bY8SSXF1B45DQWrVQV5bMpNJkkeyfD
      FGP9xJdC2Emc8iAVea/x7GqvL8GJdiCatKzxLHv9BWbVWIRcexMpA+yEte+ZOIUHv1zKoidW
      02SLIGXqU2QNuZT3jCbt0VvJe9nzunG3M3vmWHT+iy+/OHv27NmeHkRPamxsxHKm9PQwpIfo
      UggxmgIgRtMUqLGR/v379/Qw/JrL5SI0NLSnh/GT0CeAGE0BEKMpAGI0BUCMpk4w6gRfCnWC
      RQKQAiBG899OsOWmYv9WPti2nd2/vI/F2YkXPLc018HSYq8Hzl2lavH1tmUsLfiMqiYbEaPv
      5KGsdC71IlUxy4+6HNpyV7DjzcWs+GgOT064qlsHVrllOW/Xj+MBRwatazpuraaqZhyznVmM
      6rDFOvQOKw6MYda/zSDGfob60nd4eeVO5szSBXFyMT/tBEN02uM8m5lMjN1XY6CWGtvVRPrY
      Ul12msS7Uz37BRGW+AfuDd6lTrD45Ked4C6466kLi/FZyhkQfobtm0r49YPJhAVBa0MtZ/t+
      R0UFENudRyuBwE87wV1wuThdnIejGKAfoUPHcO/0hxg/yIZ97HSmH/8rC//4Bq4WGyFRw4m/
      qp6+3X/nFgkAftoJ7kJkGnOcaW3/brmpPbKZt5atJXJBJnFcQULm8/x75vmn78tbxAnfHU4x
      nJ92gi+Dzc7A+Lu47bpFlFVDXMcvBtYB9h4dwk3TfuwbSSDy005w5yo3v8HqkhM0tAK0Un9w
      HevLRzIiEmiu5KsTDbRtqqLIuZLyibeR8KOTJoHIbzvBHX/OX1wMkMJMZzaJE+9hRH4u81Yd
      b5vnXzuOaTlTGQIQ3MKnq+fxl+MuWjy/p3giTfMf8U2FGHWCjaZLIcRoCoAYTVMgdYK7pE6w
      SIBSAMRoCoAYTQEQo6kTjDrBl0KdYJEApACI0fy3E9zVOsEXFG1CGXrH4zz/2yGe11nAvHOD
      hHPXEHXDGCWw+G0n+Pw6wc8wsOkIha85eW/YfCYPAahj29IVlN3iKdOcaeBEfcu5fau/Cea+
      PztJ89WZFPHip53gLtYJLv+Irf3v5eHUGNqqv1dwTVT7daSnqK2JIEonv1wCP+0Ed75O8HfH
      jjJ47F0/cJeHOursgxjRnQcmAasbKpHTmZk9vH0jR8uu4vePLWQSAPvI+48vSZu7kPT2/b9+
      jwV5TczNsshdY5H12PltlRty2XMJQ2hqCuJMUAUudwyhdhut9QcpePV/CJ/9J34THsu9s9vb
      7600nCglf/nH3PD0k3TzLE0CgJ9WIjtbJhWiYyNpPdmfUM8tU4LC4pmQ/F+8Xw6Ee79OEFdc
      k8xvx33AxnKY0PEmQmI8P61EdrZMKhA3jsGfrGLLcXfbvvUH+WhPBDeOAPat5a8bDlLrtgAL
      d0UR67YNID7upz1S6Z38thLZ6TKptlgmZ0/gb8ueI+erJmyhQ0l9+HHG2oGENO44sZrFz71K
      VZNFv4jR3PlIFmN1WzjxQX0AVSKNpt8Ei9EUADGapkCqRHZJlUiRAKUAiNEUADGaAiBGUyUS
      VSIvhSqRIgFIARCj9dJKpIW7Yj9bP9jG9t2/5L7F3nVHi9P71vL6yiKOu1rargV6KIt0rZMq
      PvTOSmTlFpa/Xc+4BxxkdFxD9dRHLP/vPmS88BLxYX1wV+zgzcUr2Tl/li6Ik4v0zkpkdBqP
      P5tJcoz94j5B+XFakicQHxYE2LDHpHL3+D7UfdvNQ5SA0CsrkZ2udpRwC0PXvU/JLQ+S7PkE
      WP/lMCZP7s4jlUDhp8ukttDcJ4QQ7zez2bBVVlANP9BGa3/eCKY+00regtm88S3Yr76Vf/7T
      lM73EWP56TKp/Qg+00ST9/taFlZ0lM/V4S/QUEpe7jHGPvcaWWF9cFfsJn/JasiZxih9B5AO
      emUnuDPVH6/H+vUc4j3VMntMMnfcuIH3D8Eo3RlLOuidneBOhA8ZyoltWzjWtoYqrfUH2b7H
      IiK8ix3FSL2zE1yai+PiNVRJmekkOzGTR+re4s0X3uWrJot+oUNJ+UMOU4cgchEVYtQJNpou
      hRCjKQBiNE2B1AnukjrBIgFKARCjKQBiNAVAjKZOMOoEXwp1gkUCkAIgRuulnWAozXXgfTnQ
      uatU3WVsezuf9/Yex9UC/TxrB2QmqBMsF+udnWCqqaoZx2xnFheteuSqpWXMNOY9EEOoHdy1
      u1nzF3WCxbfe2Qmmlhrb1b7LMZG/Ii35Gs/6YTbsA28i8fpGmpq7eYgSEHpnJ9hdT11YTJc1
      x9aGExzYvI4Pr7qLHK0QKT70zk6wy8Xp4jwcxQD9CB06hnunP8T4QZ5vCJUbWDCvgJMM4MbM
      Gcy6K/YH1hQW0/XOTnBkGnOcaZ7H3dQe2cxby9YSuSCTOIDodOY607HcLioOf0ju64f43WPp
      DOqqTynG6f2dYJudgfF3cdt1iyirhrhI702hXDNmMvd/vYiNB9LJ0jrB0kGv7ARXbn6D1SUn
      aKv9tlJ/cB3ry0cyIhKqP9lE0bEqz7b2TnAzYfoOID70yk5w9MR7GJGfy7xVx3G12Ai5dhzT
      cqYyBHAPCuVk/qus/byKJgt1gqVTKsSoE2w0XQohRlMAxGiaAqkT3CV1gkUClD4BGht7egjS
      g9QIA02BuhDI00RNgcRoCoAYTQEQoykAYjTjfwokZtMngBhNARCjKQBiNAVAjKYAiNEUAC9W
      zQ5yX8jB4ZjFk39+hwMN57eV5jpwPPU2B6wOO7l3smSWA0du6c861u7UWlXC6n99hhyHA0fO
      M7xU+Dnthx7Ixw0KgJdKNi3fStj0hSxxvsKcSbWsXLkT97ntKWSkVbL78IVngnvvLlpSJzL4
      5x5ut9lH/tLPiM18gZecTpa8+DQ3f/UWhYfatwfqcbdRANqVbadkSAaTb7gSG0FEpU4hzVXC
      nvMJICZpJJW7D3P+VHCzd1cLiTeF+XjB3iKBqf+SReqwMILw3O1v3HU0Bfxxt1EA2p2qJ/z6
      YV63XQknfmRfauu8nhOdxMjK3Zz7y9C9l10tiSQN+FlH2s1s2LzvNdPwOYUfh5AywuuxgDzu
      NgqAR3NzMyEhF94/ro+tim+qvB+JZmxS/bnpgHvvLhh7C4FxxxWL00cKecn5GaOzpzHqgv8V
      gXvcCoBHcHAwTd6f+8AZK4qroy58XnhSAvW7D2NhcWg/JCUFwk0XW/lqwzJWfzESxx8n4+ve
      ZoF53ArAeVeFUffFMa95bh0HP/uegeEdnheeREL9bg637mNXcxKBcB7UbXuTLVHTmNF+02Jf
      AvC4QQE4L3Y8yeUFFB45jUUrVUX5bApN9vEHHU5SQj0l7xTTnJQUADfdPcTGfcO55+Yrf+A2
      le0C7bjbqBJ5TjRpj95K3sueO9XF3c7smWN9/kGHJyVQ+e5hJv0uAE6D6nKO73+X5x3/ecHD
      gzPmMzf9wjvABtRxe+hyaDGapkBiNAVAjKYAiNEUADGaAiBGUwDEaAqAGE0BEKMpAGI0BUCM
      pgCI0RQAMZoCIEZTAMRoCoAYTQEQoykAYjQFQIymAIjRFAAxmgIgRlMAxGgKgBhNARCjKQBi
      NAVAjKYAiNEUADGaAiBGUwDEaP8PAHl5qjIHYHwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='134' name='Year' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
